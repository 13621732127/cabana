{"version":3,"sources":["../af9125d8e28f940cca50.worker.js","../webpack/bootstrap af9125d8e28f940cca50","utils/dbc.js","../node_modules/buffer/index.js","../node_modules/webpack/buildin/global.js","models/can/signal.js","models/can/frame.js","workers/CanStreamerWorker.worker.js","models/can/dbc.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/right-pad/rightpad.js","logging/CloudLog.js","logging/LogEntries.js","config.js","utils/url.js","models/can/BoardUnit.js","models/can/logSignals.js","../node_modules/cuint/index.js","../node_modules/cuint/lib/uint32.js","../node_modules/cuint/lib/uint64.js","../node_modules/xtend/immutable.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","Buffer","findMaxByteStateChangeCount","messages","values","map","byteStateChangeCounts","reduce","counts","countArr","concat","count1","count2","addCanMessage","canMessage","dbc","canStartTime","prevMsgEntries","byteStateChangeCountsByMessage","address","busTime","data","bus","id","toString","undefined","createMessageSpec","prevMsgEntry","entries","length","every","_parseMessage","parseMessage","msgEntry","count","idx","push","frame","getMessageFrame","size","byteColors","Array","fill","determineByteStateChangeTimes","hexData","time","msgSize","lastParsedMessage","byteStateChangeTimes","from","substr","createMessageEntry","relTime","signals","getSignalValues","updated","Date","now","timeStart","msgSpec","_determineByteStateCh","bigEndianBitIndex","matrixBitIndex","BIG_ENDIAN_START_BITS","indexOf","matrixBitNumber","bigEndianIndex","setMessageByteColors","message","maxByteStateChangeCount","isNaN","Math","min","red","round","j","global","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","encoding","checked","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","len","copy","buffer","isnan","type","isArray","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","arr","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","foo","subarray","e","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","g","Function","eval","window","_classCallCheck","instance","Constructor","__WEBPACK_IMPORTED_MODULE_0__utils_dbc__","_slicedToArray","sliceIterator","_n","_d","_e","_s","_i","iterator","next","done","err","_createClass","defineProperties","props","descriptor","writable","key","protoProps","staticProps","Signal","_ref","_ref$startBit","startBit","_ref$size","_ref$isLittleEndian","isLittleEndian","_ref$isSigned","isSigned","_ref$isFloat","isFloat","_ref$factor","factor","_ref$offset","_ref$unit","unit","_ref$receiver","receiver","_ref$comment","comment","_ref$multiplex","multiplex","_ref$min","_ref$max","_ref$valueDescription","valueDescriptions","Map","assign","uid","random","calculateMin","calculateMax","colors","generateColors","byteOrder","signedChar","msgId","entryPairs","_ref2","_ref3","lsbBitNumber","bitIndex","bitRange","bitNumber","isLsb","isMsb","range","littleEndianBitDescription","bigEndianBitDescription","rawRange","rawMin","calculateRawRange","rawMax","otherSignal","_this","v","Frame","_ref$id","_ref$transmitters","transmitters","_ref$extended","extended","_ref$signals","txNum","txName","nextNewTransmitterName","signal","text","header","create","_interopRequireDefault","default","processStreamedCanMessages","newCanMessages","firstCanTime","lastBusTime","lastCanTime","batch","_newCanMessages$batch","canMessages","sort","msg1","msg2","busTimeSum","_canMessages$i","prevBusTime","_xtend2","DbcUtils","newMaxByteStateChangeCount","keys","forEach","self","postMessage","newMessages","seekTime","_dbc","_dbc2","_dbc3","_dbc4","_xtend","onmessage","_e$data","dbcText","DBC","floatOrInt","numericStr","isInteger","parseFloat","swapOrder","wordSize","gSize","swappedWords","word","__WEBPACK_IMPORTED_MODULE_0_right_pad__","__WEBPACK_IMPORTED_MODULE_0_right_pad___default","__WEBPACK_IMPORTED_MODULE_1__logging_CloudLog__","__WEBPACK_IMPORTED_MODULE_2__signal__","__WEBPACK_IMPORTED_MODULE_3__frame__","__WEBPACK_IMPORTED_MODULE_4__BoardUnit__","__WEBPACK_IMPORTED_MODULE_5__utils_dbc__","__WEBPACK_IMPORTED_MODULE_6__logSignals__","UINT64","DBC_COMMENT_RE","DBC_COMMENT_MULTI_LINE_RE","MSG_RE","SIGNAL_RE","MP_SIGNAL_RE","VAL_RE","VAL_TABLE_RE","MSG_TRANSMITTER_RE","SIGNAL_COMMENT_RE","SIGNAL_COMMENT_MULTI_LINE_RE","MESSAGE_COMMENT_RE","MESSAGE_COMMENT_MULTI_LINE_RE","BOARD_UNIT_RE","BOARD_UNIT_COMMENT_RE","BOARD_UNIT_COMMENT_MULTI_LINE_RE","dbcString","boardUnits","comments","importDbcString","messageNames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","msg","return","msgNum","msgName","boardUnitNames","bu","missingBoardUnits","receivers","filter","recv","updateBoardUnits","txt","_newSymbols","frames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","f","_ref4","_ref5","_ref6","signalsByMsgId","sig","s1","s2","_ref7","_ref8","_ref9","_ref10","msgAddr","_ref11","_ref12","_ref13","_ref14","valueDescriptionText","nextNewFrameName","newMsg","createFrame","warnings","valueTables","followUp","lines","split","line","_followUp","followUpLine","boardUnit","partialComment","matches","_matches$slice","_matches$slice2","idString","transmitter","_matches2","_matches3","receiverStr","signalProperties","warn","_matches4$slice","_matches4$slice2","messageId","signalName","vals","description","table","_matches5$slice","_matches5$slice2","tableName","items","_matches6$slice","_matches6$slice2","hasFollowUp","_matches7$slice","_matches7$slice2","_matches8$slice","_matches8$slice2","_matches9$slice","_matches9$slice2","boardUnitNameStr","newBoardUnits","_ret","_matches$slice3","_matches$slice4","boardUnitName","find","_matches10$slice","_matches10$slice2","signalSpec","blen","dataBitPos","rightHandAnd","ival","shiftr","and","toNumber","bitPos","shiftAmount","signalValue","has","paddedBuffer","paddedDataHex","signalValuesByName","valueForInt64Signal","valueForInt32Signal","metricComment","metric","metrics","_ref15","_ref16","metricName","getLens","b64","validLen","lens","placeHoldersLen","_byteLength","tmp","Arr","curByte","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","output","extraBytes","parts","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","_string","_length","_char","__WEBPACK_IMPORTED_MODULE_0__LogEntries__","__WEBPACK_IMPORTED_MODULE_1__config__","CloudLog","init","token","no_format","catchall","context","update","level","__JEST__","entry","ctx","created","getTime","error","emit","LogStream","options","_endpoint","_traceCode","trace","PI","substring","_pageInfo","page_info","_token","_print","print","_noFormat","_SSL","XDomainRequest","ssl","location","protocol","LEENDPOINT","_backlog","_active","_sentPageInfo","_apiCall","request","_getAjaxObject","constructor","XMLHttpRequest","onreadystatechange","readyState","status","console","shift","onload","open","setRequestHeader","overrideMimeType","send","_getEvent","args","_agentInfo","nav","navigator","doNotTrack","screen","url","pathname","referrer","document","width","height","innerWidth","innerHeight","browser","appName","version","appVersion","cookie_enabled","cookieEnabled","do_not_track","platform","_rawLog","event","serialized","ex","cache","JSON","stringify","_typeof","_indexOf","oldHandler","onerror","newHandler","Logger","logger","dict","endpoint","k","_log","info","loggers","_getLogger","_createLogStream","_deprecatedInit","_destroyLogStream","createLogStream","to","destroy","LOGENTRIES_TOKEN","__WEBPACK_IMPORTED_MODULE_0__utils_url__","getUrlParameter","regex","RegExp","results","exec","search","decodeURIComponent","BoardUnit","attributes","createSignalEntry","__WEBPACK_IMPORTED_MODULE_1__signal__","unsigned","longSignal","index","shortSignal","charSignal","boolSignal","addressForName","ADDRESS_LIST","nameForAddress","isLogAddress","frameForAddress","__WEBPACK_IMPORTED_MODULE_0__frame__","signalMap","wheelSpeeds","FrontLeftWheel","FrontRightWheel","RearLeftWheel","RearRightWheel","ego","VEgo","AEgo","VEgoRaw","YawRate","controls","SteeringAngle","Brake","Gas","flags","LeftBlinker","RightBlinker","GenericToggle","DoorOpen","SeatbeltUnlatched","GasPressed","BrakeLights","SteeringPressed","Standstill","CruiseState.Enabled","CruiseState.Available","CruiseState.Standstill","GearShifter","CruiseState.Speed","ubloxGnss","RcvTow","GpsWeek","LeapSeconds","NumMeas","health","Voltage","Current","Started","ControlsAllowed","GasInterceptorDetected","StartedSignalDetected","thermalCPU","Cpu0","Cpu1","Cpu2","Cpu3","thermalData","Mem","Gpu","FanSpeed","BatteryPercent","UsbOnline","thermalFreeSpace","FreeSpace","CarState:WheelSpeeds","CarState:Ego","CarState:Controls","CarState:Flags","UbloxGnss:MeasurementReport","Health:Data","Thermal:CPU","Thermal:Data","Thermal:FreeSpace","UINT32","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","h","_low","_high","remainder","fromNumber","fromBits","radix","add","other","a00","a16","subtract","clone","negate","multiply","c16","c00","b16","b00","div","gt","eq","_other","lt","shiftLeft","shiftRight","greaterThan","lessThan","or","not","xor","shiftl","allowOverflow","rotateLeft","rotl","rotateRight","rotr","a32","a48","_a00","_a16","_a32","_a48","radixUint","radixPowerCache","16","10","2","radixCache","b32","b48","c32","c48","high","low","extend","source"],"mappings":"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","file":"af9125d8e28f940cca50.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/cabana/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(Buffer) {function findMaxByteStateChangeCount(messages){return Object.values(messages).map(function(m){return m.byteStateChangeCounts;}).reduce(function(counts,countArr){return counts.concat(countArr);},[])// flatten arrays\n.reduce(function(count1,count2){return count1>count2?count1:count2;},0);// find max\n}function addCanMessage(canMessage,dbc,canStartTime,messages,prevMsgEntries,byteStateChangeCountsByMessage){var address=canMessage.address,busTime=canMessage.busTime,data=canMessage.data,bus=canMessage.bus;var id=bus+\":\"+address.toString(16);if(messages[id]===undefined)messages[id]=createMessageSpec(dbc,address,id,bus);var prevMsgEntry=messages[id].entries.length>0?messages[id].entries[messages[id].entries.length-1]:prevMsgEntries[id]||null;if(byteStateChangeCountsByMessage[id]&&messages[id].byteStateChangeCounts.every(function(c){return c===0;})){messages[id].byteStateChangeCounts=byteStateChangeCountsByMessage[id];}var _parseMessage=parseMessage(dbc,busTime,address,data,canStartTime,prevMsgEntry),msgEntry=_parseMessage.msgEntry,byteStateChangeCounts=_parseMessage.byteStateChangeCounts;messages[id].byteStateChangeCounts=byteStateChangeCounts.map(function(count,idx){return messages[id].byteStateChangeCounts[idx]+count;});messages[id].entries.push(msgEntry);return msgEntry;}function createMessageSpec(dbc,address,id,bus){var frame=dbc.getMessageFrame(address);var size=frame?frame.size:8;return{address:address,id:id,bus:bus,entries:[],frame:frame,byteColors:Array(size).fill(0),byteStateChangeCounts:Array(size).fill(0)};}function determineByteStateChangeTimes(hexData,time,msgSize,lastParsedMessage){var byteStateChangeCounts=Array(msgSize).fill(0);var byteStateChangeTimes=void 0;if(!lastParsedMessage){byteStateChangeTimes=Array(msgSize).fill(time);}else{byteStateChangeTimes=Array.from(lastParsedMessage.byteStateChangeTimes);for(var i=0;i<byteStateChangeTimes.length;i++){var currentData=hexData.substr(i*2,2),prevData=lastParsedMessage.hexData.substr(i*2,2);if(currentData!==prevData){byteStateChangeTimes[i]=time;byteStateChangeCounts[i]=1;}}}return{byteStateChangeTimes:byteStateChangeTimes,byteStateChangeCounts:byteStateChangeCounts};}function createMessageEntry(dbc,address,time,relTime,data,byteStateChangeTimes){return{signals:dbc.getSignalValues(address,data),time:time,relTime:relTime,hexData:Buffer.from(data).toString(\"hex\"),byteStateChangeTimes:byteStateChangeTimes,updated:Date.now()};}function parseMessage(dbc,time,address,data,timeStart,lastParsedMessage){var hexData=void 0;if(typeof data===\"string\"){hexData=data;data=Buffer.from(data,\"hex\");}else{hexData=Buffer.from(data).toString(\"hex\");}var msgSpec=dbc.getMessageFrame(address);var msgSize=msgSpec?msgSpec.size:8;var relTime=time-timeStart;var _determineByteStateCh=determineByteStateChangeTimes(hexData,relTime,msgSize,lastParsedMessage),byteStateChangeTimes=_determineByteStateCh.byteStateChangeTimes,byteStateChangeCounts=_determineByteStateCh.byteStateChangeCounts;var msgEntry=createMessageEntry(dbc,address,time,relTime,data,byteStateChangeTimes);return{msgEntry:msgEntry,byteStateChangeCounts:byteStateChangeCounts};}var BIG_ENDIAN_START_BITS=[];for(var i=0;i<64;i+=8){for(var j=7;j>-1;j--){BIG_ENDIAN_START_BITS.push(i+j);}}function bigEndianBitIndex(matrixBitIndex){return BIG_ENDIAN_START_BITS.indexOf(matrixBitIndex);}function matrixBitNumber(bigEndianIndex){return BIG_ENDIAN_START_BITS[bigEndianIndex];}function setMessageByteColors(message,maxByteStateChangeCount){message.byteColors=message.byteStateChangeCounts.map(function(count){return isNaN(count)?0:Math.min(255,75+180*(count/maxByteStateChangeCount));}).map(function(red){return\"rgb(\"+Math.round(red)+\",0,0)\";});return message;}/* harmony default export */ __webpack_exports__[\"default\"] = ({bigEndianBitIndex:bigEndianBitIndex,addCanMessage:addCanMessage,createMessageSpec:createMessageSpec,matrixBitNumber:matrixBitNumber,parseMessage:parseMessage,findMaxByteStateChangeCount:findMaxByteStateChangeCount,setMessageByteColors:setMessageByteColors,createMessageEntry:createMessageEntry});\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(7)\nvar ieee754 = __webpack_require__(8)\nvar isArray = __webpack_require__(9)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_dbc__ = __webpack_require__(0);\nvar _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"])_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Signal=function(){function Signal(_ref){var name=_ref.name,_ref$startBit=_ref.startBit,startBit=_ref$startBit===undefined?0:_ref$startBit,_ref$size=_ref.size,size=_ref$size===undefined?0:_ref$size,_ref$isLittleEndian=_ref.isLittleEndian,isLittleEndian=_ref$isLittleEndian===undefined?true:_ref$isLittleEndian,_ref$isSigned=_ref.isSigned,isSigned=_ref$isSigned===undefined?false:_ref$isSigned,_ref$isFloat=_ref.isFloat,isFloat=_ref$isFloat===undefined?false:_ref$isFloat,_ref$factor=_ref.factor,factor=_ref$factor===undefined?1:_ref$factor,_ref$offset=_ref.offset,offset=_ref$offset===undefined?0:_ref$offset,_ref$unit=_ref.unit,unit=_ref$unit===undefined?\"\":_ref$unit,_ref$receiver=_ref.receiver,receiver=_ref$receiver===undefined?[\"XXX\"]:_ref$receiver,_ref$comment=_ref.comment,comment=_ref$comment===undefined?null:_ref$comment,_ref$multiplex=_ref.multiplex,multiplex=_ref$multiplex===undefined?null:_ref$multiplex,_ref$min=_ref.min,min=_ref$min===undefined?null:_ref$min,_ref$max=_ref.max,max=_ref$max===undefined?null:_ref$max,_ref$valueDescription=_ref.valueDescriptions,valueDescriptions=_ref$valueDescription===undefined?new Map():_ref$valueDescription;_classCallCheck(this,Signal);Object.assign(this,{name:name,startBit:startBit,size:size,isLittleEndian:isLittleEndian,isSigned:isSigned,isFloat:isFloat,factor:factor,offset:offset,unit:unit,receiver:receiver,comment:comment,multiplex:multiplex,valueDescriptions:valueDescriptions});var uid=Math.random().toString(36);if(min==null){min=this.calculateMin();}if(max==null){max=this.calculateMax();}var colors=this.generateColors();Object.assign(this,{min:min,max:max,uid:uid,colors:colors});}_createClass(Signal,[{key:\"text\",value:function text(){var multiplex=this.multiplex?\" \"+this.multiplex:\"\";var byteOrder=this.isLittleEndian?1:0;var signedChar=this.isSigned?\"-\":\"+\";return\"SG_ \"+this.name+multiplex+\" : \"+(this.startBit+\"|\"+this.size+\"@\"+byteOrder+signedChar)+(\" (\"+this.factor+\",\"+this.offset+\")\")+(\" [\"+this.min+\"|\"+this.max+\"]\")+(\" \\\"\"+this.unit+\"\\\" \"+this.receiver);}},{key:\"valueDescriptionText\",value:function valueDescriptionText(msgId){var entryPairs=Array.from(this.valueDescriptions.entries());var values=entryPairs.reduce(function(str,_ref2){var _ref3=_slicedToArray(_ref2,2),value=_ref3[0],desc=_ref3[1];return str+value+(\" \\\"\"+desc+\"\\\" \");},\"\");return\"VAL_ \"+msgId+\" \"+this.name+\" \"+values+\";\";}},{key:\"lsbBitIndex\",value:function lsbBitIndex(){// Returns LSB bit index in matrix order (see AddSignals.js)\nif(this.isLittleEndian){return this.startBit;}else{var lsbBitNumber=this.lsbBitNumber();return __WEBPACK_IMPORTED_MODULE_0__utils_dbc__[\"default\"].matrixBitNumber(lsbBitNumber);}}},{key:\"lsbBitNumber\",value:function lsbBitNumber(){// Returns LSB bit number in big endian ordering\nreturn __WEBPACK_IMPORTED_MODULE_0__utils_dbc__[\"default\"].bigEndianBitIndex(this.startBit)+this.size-1;}},{key:\"msbBitIndex\",value:function msbBitIndex(){if(this.isLittleEndian){return this.startBit+this.size-1;}else{return this.startBit;}}},{key:\"littleEndianBitDescription\",value:function littleEndianBitDescription(bitIndex){var bitRange=[this.startBit,this.startBit+this.size-1];if(bitIndex<bitRange[0]||bitIndex>bitRange[1]){return null;}else{var bitNumber=bitIndex-bitRange[0];var isLsb=bitIndex===bitRange[0];var isMsb=bitIndex===bitRange[1];return{bitNumber:bitNumber,isLsb:isLsb,isMsb:isMsb};}}},{key:\"bigEndianBitDescription\",value:function bigEndianBitDescription(bitIndex){var start=__WEBPACK_IMPORTED_MODULE_0__utils_dbc__[\"default\"].bigEndianBitIndex(this.startBit);var range=[start,start+this.size-1];var bitNumber=__WEBPACK_IMPORTED_MODULE_0__utils_dbc__[\"default\"].bigEndianBitIndex(bitIndex);if(bitNumber<range[0]||bitNumber>range[1]){return null;}var isLsb=bitNumber===range[1];var isMsb=bitIndex===this.startBit;return{bitNumber:bitNumber,isLsb:isLsb,isMsb:isMsb,range:range};}},{key:\"bitDescription\",value:function bitDescription(bitIndex){if(this.isLittleEndian){return this.littleEndianBitDescription(bitIndex);}else{return this.bigEndianBitDescription(bitIndex);}}},{key:\"calculateRawRange\",value:function calculateRawRange(){var rawRange=Math.pow(2,this.size);if(this.isSigned){rawRange/=2;}return[this.isSigned?-1*rawRange:0,rawRange-1];}},{key:\"calculateMin\",value:function calculateMin(){var rawMin=this.calculateRawRange()[0];return this.offset+rawMin*this.factor;}},{key:\"calculateMax\",value:function calculateMax(){var rawMax=this.calculateRawRange()[1];return this.offset+rawMax*this.factor;}},{key:\"generateColors\",value:function generateColors(){var colors=Array(3);for(var i=0;i<3;i++){colors[i]=Math.floor(Math.random()*211);}return colors;}},{key:\"equals\",value:function equals(otherSignal){var _this=this;return otherSignal.name===this.name&&otherSignal.startBit===this.startBit&&otherSignal.size===this.size&&otherSignal.isLittleEndian===this.isLittleEndian&&otherSignal.isSigned===this.isSigned&&otherSignal.isFloat===this.isFloat&&otherSignal.factor===this.factor&&otherSignal.offset===this.offset&&otherSignal.unit===this.unit&&otherSignal.receiver.length===this.receiver.length&&otherSignal.receiver.every(function(v,i){return v===_this.receiver[i];})&&otherSignal.comment===this.comment&&otherSignal.multiplex===this.multiplex;}}]);return Signal;}();/* harmony default export */ __webpack_exports__[\"a\"] = (Signal);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Frame=function(){function Frame(_ref){var name=_ref.name,_ref$id=_ref.id,id=_ref$id===undefined?0:_ref$id,_ref$size=_ref.size,size=_ref$size===undefined?0:_ref$size,_ref$transmitters=_ref.transmitters,transmitters=_ref$transmitters===undefined?[]:_ref$transmitters,_ref$extended=_ref.extended,extended=_ref$extended===undefined?0:_ref$extended,_ref$comment=_ref.comment,comment=_ref$comment===undefined?null:_ref$comment,_ref$signals=_ref.signals,signals=_ref$signals===undefined?{}:_ref$signals;_classCallCheck(this,Frame);Object.assign(this,{name:name,id:id,size:size,transmitters:transmitters,extended:extended,comment:comment,signals:signals});}_createClass(Frame,[{key:\"nextNewTransmitterName\",value:function nextNewTransmitterName(){var txNum=1,txName=void 0;do{txName=\"NEW_TRANSMITTER_\"+txNum;txNum++;}while(this.transmitters.indexOf(txName)!==-1);return txName;}},{key:\"addTransmitter\",value:function addTransmitter(){var txName=this.nextNewTransmitterName();this.transmitters.push(txName);return txName;}},{key:\"header\",value:function header(){return\"BO_ \"+this.id+\" \"+this.name+\": \"+this.size+\" \"+(\"\"+(this.transmitters[0]||\"XXX\"));}},{key:\"text\",value:function text(){var signals=Object.values(this.signals).map(function(signal){return\" \"+signal.text();})// indent\n.join(\"\\n\");if(signals.length>0){return this.header()+\"\\n\"+signals;}else{return this.header();}}},{key:\"copy\",value:function copy(){var copy=Object.assign(Object.create(this),this);return copy;}}]);return Frame;}();/* harmony default export */ __webpack_exports__[\"a\"] = (Frame);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _dbc = __webpack_require__(6);\n\nvar _dbc2 = _interopRequireDefault(_dbc);\n\nvar _dbc3 = __webpack_require__(0);\n\nvar _dbc4 = _interopRequireDefault(_dbc3);\n\nvar _xtend = __webpack_require__(20);\n\nvar _xtend2 = _interopRequireDefault(_xtend);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction processStreamedCanMessages(newCanMessages, prevMsgEntries, firstCanTime, dbc, lastBusTime, byteStateChangeCountsByMessage, maxByteStateChangeCount) {\n  var messages = {};\n  var lastCanTime = void 0;\n\n  for (var batch = 0; batch < newCanMessages.length; batch++) {\n    var _newCanMessages$batch = newCanMessages[batch],\n        time = _newCanMessages$batch.time,\n        canMessages = _newCanMessages$batch.canMessages;\n\n    canMessages = canMessages.sort(function (msg1, msg2) {\n      if (msg1[1] < msg2[1]) {\n        return -1;\n      } else if (msg1[1] > msg2[1]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    var busTimeSum = 0;\n\n    for (var i = 0; i < canMessages.length; i++) {\n      var _canMessages$i = canMessages[i],\n          address = _canMessages$i.address,\n          busTime = _canMessages$i.busTime,\n          data = _canMessages$i.data,\n          bus = _canMessages$i.bus;\n\n\n      var prevBusTime = void 0;\n      if (i === 0) {\n        if (lastBusTime === null) {\n          prevBusTime = 0;\n        } else {\n          prevBusTime = lastBusTime;\n        }\n      } else {\n        prevBusTime = canMessages[i - 1].busTime;\n      }\n\n      if (busTime >= prevBusTime) {\n        busTimeSum += busTime - prevBusTime;\n      } else {\n        busTimeSum += 0x10000 - prevBusTime + busTime;\n      }\n      var message = (0, _xtend2.default)(canMessages[i]);\n      message.busTime = time + busTimeSum / 500000.0;\n\n      if (firstCanTime === 0) {\n        firstCanTime = message.busTime;\n      }\n\n      var msgEntry = _dbc4.default.addCanMessage(message, dbc, firstCanTime, messages, prevMsgEntries, byteStateChangeCountsByMessage);\n      if (i === canMessages.length - 1) {\n        lastCanTime = msgEntry.relTime;\n      }\n    }\n\n    lastBusTime = canMessages[canMessages.length - 1].busTime;\n    var newMaxByteStateChangeCount = _dbc4.default.findMaxByteStateChangeCount(messages);\n\n    if (newMaxByteStateChangeCount > maxByteStateChangeCount) {\n      maxByteStateChangeCount = newMaxByteStateChangeCount;\n    }\n\n    Object.keys(messages).forEach(function (key) {\n      messages[key] = _dbc4.default.setMessageByteColors(messages[key], maxByteStateChangeCount);\n    });\n  }\n\n  self.postMessage({\n    newMessages: messages,\n    seekTime: lastCanTime,\n    lastBusTime: lastBusTime,\n    firstCanTime: firstCanTime,\n    maxByteStateChangeCount: maxByteStateChangeCount\n  });\n} /* eslint-env worker */\n/* eslint-disable no-restricted-globals */\n\n\nself.onmessage = function (e) {\n  var _e$data = e.data,\n      newCanMessages = _e$data.newCanMessages,\n      prevMsgEntries = _e$data.prevMsgEntries,\n      firstCanTime = _e$data.firstCanTime,\n      dbcText = _e$data.dbcText,\n      lastBusTime = _e$data.lastBusTime,\n      byteStateChangeCountsByMessage = _e$data.byteStateChangeCountsByMessage,\n      maxByteStateChangeCount = _e$data.maxByteStateChangeCount;\n\n  var dbc = new _dbc2.default(dbcText);\n  processStreamedCanMessages(newCanMessages, prevMsgEntries, firstCanTime, dbc, lastBusTime, byteStateChangeCountsByMessage, maxByteStateChangeCount);\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (immutable) */ __webpack_exports__[\"swapOrder\"] = swapOrder;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_right_pad__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_right_pad___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_right_pad__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__logging_CloudLog__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__signal__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__frame__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__BoardUnit__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_dbc__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__logSignals__ = __webpack_require__(16);\nvar _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"])_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var UINT64=__webpack_require__(17).UINT64;var DBC_COMMENT_RE=/^CM_ *\"(.*)\";/;var DBC_COMMENT_MULTI_LINE_RE=/^CM_ *\"(.*)/;var MSG_RE=/^BO_ (\\w+) (\\w+) *: (\\w+) (\\w+)/;var SIGNAL_RE=/^SG_ (\\w+) : (\\d+)\\|(\\d+)@(\\d+)([+|-]) \\(([0-9.+-eE]+),([0-9.+-eE]+)\\) \\[([0-9.+-eE]+)\\|([0-9.+-eE]+)\\] \"(.*)\" (.*)/;// Multiplexed signal\nvar MP_SIGNAL_RE=/^SG_ (\\w+) (\\w+) *: (\\d+)\\|(\\d+)@(\\d+)([+|-]) \\(([0-9.+-eE]+),([0-9.+-eE]+)\\) \\[([0-9.+-eE]+)\\|([0-9.+-eE]+)\\] \"(.*)\" (.*)/;var VAL_RE=/^VAL_ (\\w+) (\\w+) (.*);/;var VAL_TABLE_RE=/^VAL_TABLE_ (\\w+) (.*);/;var MSG_TRANSMITTER_RE=/^BO_TX_BU_ ([0-9]+) *: *(.+);/;var SIGNAL_COMMENT_RE=/^CM_ SG_ *(\\w+) *(\\w+) *\"(.*)\";/;var SIGNAL_COMMENT_MULTI_LINE_RE=/^CM_ SG_ *(\\w+) *(\\w+) *\"(.*)/;// Message Comments (CM_ BO_ )\nvar MESSAGE_COMMENT_RE=/^CM_ BO_ *(\\w+) *\"(.*)\";/;var MESSAGE_COMMENT_MULTI_LINE_RE=/^CM_ BO_ *(\\w+) *\"(.*)/;var BOARD_UNIT_RE=/^BU_:(.*)/;var BOARD_UNIT_COMMENT_RE=/^CM_ BU_ *(\\w+) *\"(.*)\";/;var BOARD_UNIT_COMMENT_MULTI_LINE_RE=/^CM_ BU_ *(\\w+) *\"(.*)/;// Follow ups are used to parse multi-line comment definitions\nvar FOLLOW_UP_DBC_COMMENT=\"FollowUpDbcComment\";var FOLLOW_UP_SIGNAL_COMMENT=\"FollowUpSignalComment\";var FOLLOW_UP_MSG_COMMENT=\"FollowUpMsgComment\";var FOLLOW_UP_BOARD_UNIT_COMMENT=\"FollowUpBoardUnitComment\";function floatOrInt(numericStr){if(Number.isInteger(numericStr)){return parseInt(numericStr,10);}else{return parseFloat(numericStr);}}function swapOrder(arr,wordSize,gSize){var swappedWords=[];for(var i=0;i<arr.length;i+=wordSize){var word=arr.slice(i,i+wordSize);for(var j=wordSize-gSize;j>-gSize;j-=gSize){swappedWords.push(word.slice(j,j+gSize));}}return swappedWords.join(\"\");}var DBC=function(){function DBC(dbcString){_classCallCheck(this,DBC);this.boardUnits=[];this.comments=[];this.messages=new Map();if(dbcString!==undefined){this.dbcText=dbcString;this.importDbcString(dbcString);}}_createClass(DBC,[{key:\"getMessageFrame\",value:function getMessageFrame(address){if(__WEBPACK_IMPORTED_MODULE_6__logSignals__[\"b\" /* isLogAddress */](address)){return __WEBPACK_IMPORTED_MODULE_6__logSignals__[\"a\" /* frameForAddress */](address);}return this.messages.get(address);}},{key:\"nextNewFrameName\",value:function nextNewFrameName(){var messageNames=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=this.messages.values()[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var msg=_step.value;messageNames.push(msg.name);}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var msgNum=1,msgName=void 0;do{msgName=\"NEW_MSG_\"+msgNum;msgNum++;}while(messageNames.indexOf(msgName)!==-1);return msgName;}},{key:\"updateBoardUnits\",value:function updateBoardUnits(){var boardUnitNames=this.boardUnits.map(function(bu){return bu.name;});var missingBoardUnits=Array.from(this.messages.entries()).map(function(_ref){var _ref2=_slicedToArray(_ref,2),msgId=_ref2[0],frame=_ref2[1];return Object.values(frame.signals);}).reduce(function(arr,signals){return arr.concat(signals);},[]).map(function(signal){return signal.receiver;}).reduce(function(arr,receivers){return arr.concat(receivers);},[]).filter(function(recv,idx,array){return array.indexOf(recv)===idx;}).filter(function(recv){return boardUnitNames.indexOf(recv)===-1;}).map(function(recv){return new __WEBPACK_IMPORTED_MODULE_4__BoardUnit__[\"a\" /* default */](recv);});this.boardUnits=this.boardUnits.concat(missingBoardUnits);}},{key:\"text\",value:function text(){this.updateBoardUnits();var txt='VERSION \"\"\\n\\n\\n';txt+=\"NS_ :\"+this._newSymbols();txt+=\"\\n\\nBS_:\\n\";var boardUnitsText=this.boardUnits.map(function(bu){return bu.text();}).join(\" \");txt+=\"\\nBU_: \"+boardUnitsText+\"\\n\\n\\n\";var frames=[];var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=this.messages.values()[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var frame=_step2.value;frames.push(frame);}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}txt+=frames.map(function(f){return f.text();}).join(\"\\n\\n\")+\"\\n\\n\";var messageTxs=frames.map(function(f){return[f.id,f.transmitters.slice(1)];}).filter(function(_ref3){var _ref4=_slicedToArray(_ref3,2),addr=_ref4[0],txs=_ref4[1];return txs.length>0;});txt+=messageTxs.map(function(_ref5){var _ref6=_slicedToArray(_ref5,2),addr=_ref6[0],txs=_ref6[1];return\"BO_TX_BU_ \"+addr+\" : \"+txs.join(\",\")+\";\";}).join(\"\\n\")+\"\\n\\n\\n\";txt+=this.boardUnits.filter(function(bu){return bu.comment!==null;}).map(function(bu){return\"CM_ BU_ \"+bu.name+\" \\\"\"+bu.comment+\"\\\";\";}).join(\"\\n\");txt+=frames.filter(function(f){return f.comment!==null;}).map(function(msg){return\"CM_ BO_ \"+msg.address+\" \\\"\"+msg.comment+\"\\\";\";}).join(\"\\n\");var signalsByMsgId=frames.map(function(f){return Object.values(f.signals).map(function(sig){return[f.id,sig];});}).reduce(function(s1,s2){return s1.concat(s2);},[]);txt+=signalsByMsgId.filter(function(_ref7){var _ref8=_slicedToArray(_ref7,2),msgAddr=_ref8[0],sig=_ref8[1];return sig.comment!==null;}).map(function(_ref9){var _ref10=_slicedToArray(_ref9,2),msgAddr=_ref10[0],sig=_ref10[1];return\"CM_ SG_ \"+msgAddr+\" \"+sig.name+\" \\\"\"+sig.comment+\"\\\";\";}).join(\"\\n\")+\"\\n\";txt+=signalsByMsgId.filter(function(_ref11){var _ref12=_slicedToArray(_ref11,2),msgAddr=_ref12[0],sig=_ref12[1];return sig.valueDescriptions.size>0;}).map(function(_ref13){var _ref14=_slicedToArray(_ref13,2),msgAddr=_ref14[0],sig=_ref14[1];return sig.valueDescriptionText(msgAddr);}).join(\"\\n\")+\"\\n\";txt+=this.comments.map(function(comment){return\"CM_ \\\"\"+comment+\"\\\";\";}).join(\"\\n\");return txt.trim()+\"\\n\";}},{key:\"getMessageName\",value:function getMessageName(msgId){var msg=this.getMessageFrame(msgId);if(msg&&msg.frame)return msg.frame.name;return null;}},{key:\"getSignals\",value:function getSignals(msgId){var msg=this.getMessageFrame(msgId);if(msg)return msg.signals;return{};}},{key:\"createFrame\",value:function createFrame(msgId){var msg=new __WEBPACK_IMPORTED_MODULE_3__frame__[\"a\" /* default */]({name:this.nextNewFrameName(),id:msgId,size:8});this.messages.set(msgId,msg);return msg;}},{key:\"setSignals\",value:function setSignals(msgId,signals){var msg=this.getMessageFrame(msgId);if(msg){var newMsg=Object.assign(Object.create(msg),msg);newMsg.signals=signals;this.messages.set(msgId,newMsg);}else{var _msg=this.createFrame(msgId);_msg.signals=signals;this.messages.set(msgId,_msg);this.updateBoardUnits();}}},{key:\"addSignal\",value:function addSignal(msgId,signal){var msg=this.getMessageFrame(msgId);if(msg){msg.signals[signal.name]=signal;this.updateBoardUnits();}}},{key:\"importDbcString\",value:function importDbcString(dbcString){var warnings=[];var messages=new Map();var boardUnits=[];var valueTables=new Map();var id=0;var followUp=null;var lines=dbcString.split(\"\\n\");for(var i=0;i<lines.length;i++){var line=lines[i].trim();if(line.length===0)continue;if(followUp!=null){var _followUp=followUp,type=_followUp.type,data=_followUp.data;line=line.replace(/\" *;/,\"\");var followUpLine=\"\\n\"+line.substr(0,line.length);if(line.indexOf('\"')!==-1){followUp=null;followUpLine=followUpLine.substr(0,followUpLine.length-1);}if(type===FOLLOW_UP_SIGNAL_COMMENT){var signal=data;signal.comment+=followUpLine;}else if(type===FOLLOW_UP_MSG_COMMENT){var msg=data;msg.comment+=followUpLine;}else if(type===FOLLOW_UP_BOARD_UNIT_COMMENT){var boardUnit=data;boardUnit.comment+=followUpLine;}else if(type===FOLLOW_UP_DBC_COMMENT){//          const comment = data;\nvar partialComment=this.comments[this.comments.length-1];this.comments[this.comments.length-1]=partialComment+followUpLine;}}if(line.indexOf(\"BO_ \")===0){var matches=line.match(MSG_RE);if(matches===null){warnings.push(\"failed to parse message definition on line \"+(i+1)+\" -- \"+line);continue;}var _matches$slice=matches.slice(1),_matches$slice2=_slicedToArray(_matches$slice,4),idString=_matches$slice2[0],name=_matches$slice2[1],size=_matches$slice2[2],transmitter=_matches$slice2[3];id=parseInt(idString,0);// 0 radix parses hex or dec\nsize=parseInt(size,10);var frame=new __WEBPACK_IMPORTED_MODULE_3__frame__[\"a\" /* default */]({name:name,id:id,size:size,transmitters:[transmitter]});messages.set(id,frame);}else if(line.indexOf(\"SG_\")===0){var _matches=line.match(SIGNAL_RE);if(_matches===null){_matches=line.match(MP_SIGNAL_RE);if(_matches===null){warnings.push(\"failed to parse signal definition on line \"+(i+1)+\" -- \"+line);continue;}// for now, ignore multiplex which is matches[1]\n_matches=_matches[1]+_matches.slice(3);}else{_matches=_matches.slice(1);}var _matches2=_matches,_matches3=_slicedToArray(_matches2,11),_name=_matches3[0],startBit=_matches3[1],_size=_matches3[2],isLittleEndian=_matches3[3],isSigned=_matches3[4],factor=_matches3[5],offset=_matches3[6],min=_matches3[7],max=_matches3[8],unit=_matches3[9],receiverStr=_matches3[10];startBit=parseInt(startBit,10);_size=parseInt(_size,10);isLittleEndian=parseInt(isLittleEndian,10)===1;isSigned=isSigned===\"-\";factor=floatOrInt(factor);offset=floatOrInt(offset);min=floatOrInt(min);max=floatOrInt(max);var receiver=receiverStr.split(\",\").map(function(s){return s.trim();});var signalProperties={name:_name,startBit:startBit,size:_size,isLittleEndian:isLittleEndian,isSigned:isSigned,factor:factor,offset:offset,unit:unit,min:min,max:max,receiver:receiver};var _signal=new __WEBPACK_IMPORTED_MODULE_2__signal__[\"a\" /* default */](signalProperties);if(messages.get(id)!==undefined){messages.get(id).signals[_name]=_signal;}else{__WEBPACK_IMPORTED_MODULE_1__logging_CloudLog__[\"a\" /* default */].warn(\"importDbcString: could not add signal: \"+_name+\" due to missing message: \"+id);}}else if(line.indexOf(\"VAL_ \")===0){var _matches4=line.match(VAL_RE);if(_matches4!==null){var _matches4$slice=_matches4.slice(1),_matches4$slice2=_slicedToArray(_matches4$slice,3),messageId=_matches4$slice2[0],signalName=_matches4$slice2[1],vals=_matches4$slice2[2];vals=vals.split('\"').map(function(s){return s.trim();}).filter(function(s){return s.length>0;});messageId=parseInt(messageId,10);var _msg2=messages.get(messageId);var _signal2=_msg2.signals[signalName];if(_signal2===undefined){warnings.push(\"could not find signal for value description on line \"+(i+1)+\" -- \"+line);continue;}for(var _i=0;_i<vals.length;_i+=2){var value=vals[_i].trim(),description=vals[_i+1].trim();_signal2.valueDescriptions.set(value,description);}}else{warnings.push(\"failed to parse value description on line \"+(i+1)+\" -- \"+line);}}else if(line.indexOf(\"VAL_TABLE_ \")===0){var _matches5=line.match(VAL_TABLE_RE);if(_matches5!==null){var table=new Map();var _matches5$slice=_matches5.slice(1),_matches5$slice2=_slicedToArray(_matches5$slice,2),tableName=_matches5$slice2[0],items=_matches5$slice2[1];items=items.split('\"').map(function(s){return s.trim();}).filter(function(s){return s.length>0;});for(var _i2=0;_i2<items.length;_i2+=2){var key=items[_i2],_value=items[_i2+1];table.set(key,_value);}valueTables.set(tableName,table);}else{warnings.push(\"failed to parse value table on line \"+(i+1)+\" -- \"+line);}}else if(line.indexOf(\"BO_TX_BU_ \")===0){var _matches6=line.match(MSG_TRANSMITTER_RE);if(_matches6!==null){var _matches6$slice=_matches6.slice(1),_matches6$slice2=_slicedToArray(_matches6$slice,2),_messageId=_matches6$slice2[0],_transmitter=_matches6$slice2[1];_messageId=parseInt(_messageId,10);var _msg3=messages.get(_messageId);_msg3.transmitters.push(_transmitter);messages.set(_messageId,_msg3);}else{warnings.push(\"failed to parse message transmitter definition on line \"+(i+1)+\" -- \"+line);}}else if(line.indexOf(\"CM_ SG_ \")===0){var _matches7=line.match(SIGNAL_COMMENT_RE);var hasFollowUp=false;if(_matches7===null){_matches7=line.match(SIGNAL_COMMENT_MULTI_LINE_RE);hasFollowUp=true;}if(_matches7===null){warnings.push(\"failed to parse signal comment on line \"+(i+1)+\" -- \"+line);continue;}var _matches7$slice=_matches7.slice(1),_matches7$slice2=_slicedToArray(_matches7$slice,3),_messageId2=_matches7$slice2[0],_signalName=_matches7$slice2[1],comment=_matches7$slice2[2];_messageId2=parseInt(_messageId2,10);var _msg4=messages.get(_messageId2);if(_msg4===undefined){warnings.push(\"failed to parse signal comment on line \"+(i+1)+\" -- \"+line+\":\\n                                    message id \"+_messageId2+\" does not exist prior to this line\");continue;}var _signal3=_msg4.signals[_signalName];if(_signal3===undefined){warnings.push(\"failed to parse signal comment on line \"+(i+1)+\" -- \"+line);continue;}else{_signal3.comment=comment;messages.set(_messageId2,_msg4);}if(hasFollowUp){followUp={type:FOLLOW_UP_SIGNAL_COMMENT,data:_signal3};}}else if(line.indexOf(\"CM_ BO_ \")===0){var _matches8=line.match(MESSAGE_COMMENT_RE);var _hasFollowUp=false;if(_matches8===null){_matches8=line.match(MESSAGE_COMMENT_MULTI_LINE_RE);_hasFollowUp=true;if(_matches8===null){warnings.push(\"failed to message comment on line \"+(i+1)+\" -- \"+line);continue;}}var _matches8$slice=_matches8.slice(1),_matches8$slice2=_slicedToArray(_matches8$slice,2),_messageId3=_matches8$slice2[0],_comment=_matches8$slice2[1];_messageId3=parseInt(_messageId3,10);var _msg5=messages.get(_messageId3);_msg5.comment=_comment;if(_hasFollowUp){followUp={type:FOLLOW_UP_MSG_COMMENT,data:_msg5};}}else if(line.indexOf(\"BU_: \")===0){var _matches9=line.match(BOARD_UNIT_RE);if(_matches9!==null){var _matches9$slice=_matches9.slice(1),_matches9$slice2=_slicedToArray(_matches9$slice,1),boardUnitNameStr=_matches9$slice2[0];var newBoardUnits=boardUnitNameStr.split(\" \").map(function(s){return s.trim();}).filter(function(s){return s.length>0;}).map(function(name){return new __WEBPACK_IMPORTED_MODULE_4__BoardUnit__[\"a\" /* default */](name);});boardUnits=boardUnits.concat(newBoardUnits);}else{warnings.push(\"failed to parse board unit definition on line \"+(i+1)+\" -- \"+line);continue;}}else if(line.indexOf(\"CM_ BU_ \")===0){var _ret=function(){var matches=line.match(BOARD_UNIT_COMMENT_RE);var hasFollowUp=false;if(matches===null){matches=line.match(BOARD_UNIT_COMMENT_MULTI_LINE_RE);hasFollowUp=true;if(matches===null){warnings.push(\"failed to parse board unit comment on line \"+(i+1)+\" -- \"+line);return\"continue\";}}var _matches$slice3=matches.slice(1),_matches$slice4=_slicedToArray(_matches$slice3,2),boardUnitName=_matches$slice4[0],comment=_matches$slice4[1];var boardUnit=boardUnits.find(function(bu){return bu.name===boardUnitName;});if(boardUnit){boardUnit.comment=comment;}if(hasFollowUp){followUp={type:FOLLOW_UP_BOARD_UNIT_COMMENT,data:boardUnit};}}();if(_ret===\"continue\")continue;}else if(line.indexOf(\"CM_ \")===0){var _matches10=line.match(DBC_COMMENT_RE);var _hasFollowUp2=false;if(_matches10===null){_matches10=line.match(DBC_COMMENT_MULTI_LINE_RE);if(_matches10===null){warnings.push(\"failed to parse dbc comment on line \"+(i+1)+\" -- \"+line);continue;}else{_hasFollowUp2=true;}}var _matches10$slice=_matches10.slice(1),_matches10$slice2=_slicedToArray(_matches10$slice,1),_comment2=_matches10$slice2[0];this.comments.push(_comment2);if(_hasFollowUp2){followUp={type:FOLLOW_UP_DBC_COMMENT,data:_comment2};}}}// Disabled b/c live mode frequently calls this function\n// and executes way too many network requests\nif(warnings.length>0){// warnings.forEach((warning) => CloudLog.warn('importDbcString: ' + warning));\n// warnings.forEach((warning) => console.log('importDbcString: ' + warning));\n}this.messages=messages;this.boardUnits=boardUnits;this.valueTables=valueTables;}},{key:\"valueForInt64Signal\",value:function valueForInt64Signal(signalSpec,hexData){var blen=hexData.length*4;var value=void 0,startBit=void 0,dataBitPos=void 0;if(signalSpec.isLittleEndian){value=UINT64(swapOrder(hexData,16,2),16);startBit=signalSpec.startBit;dataBitPos=UINT64(startBit);}else{// big endian\nvalue=UINT64(hexData,16);startBit=__WEBPACK_IMPORTED_MODULE_5__utils_dbc__[\"default\"].bigEndianBitIndex(signalSpec.startBit);dataBitPos=UINT64(blen-(startBit+signalSpec.size));}if(dataBitPos<0){return null;}var rightHandAnd=UINT64(Math.pow(2,signalSpec.size)-1);var ival=value.shiftr(dataBitPos).and(rightHandAnd).toNumber();if(signalSpec.isSigned&&ival&Math.pow(2,signalSpec.size-1)){ival-=Math.pow(2,signalSpec.size);}ival=ival*signalSpec.factor+signalSpec.offset;return ival;}},{key:\"valueForInt32Signal\",value:function valueForInt32Signal(signalSpec,buf){var startBit;if(signalSpec.isLittleEndian){startBit=64-signalSpec.startBit-signalSpec.size;}else{var bitPos=(-signalSpec.startBit-1)%8;if(bitPos<0){bitPos+=8;// mimic python modulo behavior\n}startBit=Math.floor(signalSpec.startBit/8)*8+bitPos;}var shiftAmount,signalValue;var byteOffset=Math.min(4,Math.floor(signalSpec.startBit/8));if(signalSpec.isLittleEndian){signalValue=buf.readUInt32LE(byteOffset);shiftAmount=signalSpec.startBit-8*byteOffset;}else{signalValue=buf.readUInt32BE(byteOffset);shiftAmount=32-(startBit-8*byteOffset+signalSpec.size);}signalValue=signalValue>>>shiftAmount&(1<<signalSpec.size)-1;if(signalSpec.isSigned&&signalValue>>>signalSpec.size-1){signalValue-=1<<signalSpec.size;}return signalValue*signalSpec.factor+signalSpec.offset;}},{key:\"getSignalValues\",value:function getSignalValues(messageId,data){var _this=this;if(!this.messages.has(messageId)&&!__WEBPACK_IMPORTED_MODULE_6__logSignals__[\"b\" /* isLogAddress */](messageId)){return{};}var frame=this.getMessageFrame(messageId);var buffer=Buffer.from(data);var paddedBuffer=buffer;if(buffer.length!==8){// pad data it's 64 bits long\nvar paddedDataHex=__WEBPACK_IMPORTED_MODULE_0_right_pad___default()(buffer.toString(\"hex\"),16,\"0\");paddedBuffer=Buffer.from(paddedDataHex,\"hex\");}var hexData=paddedBuffer.toString(\"hex\");var signalValuesByName={};Object.values(frame.signals).forEach(function(signalSpec){var value=void 0;if(signalSpec.size>32){value=_this.valueForInt64Signal(signalSpec,hexData);}else{value=_this.valueForInt32Signal(signalSpec,paddedBuffer);}signalValuesByName[signalSpec.name]=value;});return signalValuesByName;}},{key:\"getChffrMetricMappings\",value:function getChffrMetricMappings(){var metricComment=this.comments.find(function(comment){return comment.indexOf(\"CHFFR_METRIC\")===0;});if(!metricComment){return null;}return metricComment.split(\";\").map(function(metric){return metric.trim().split(\" \");}).reduce(function(metrics,_ref15){var _ref16=_slicedToArray(_ref15,6),_=_ref16[0],messageId=_ref16[1],signalName=_ref16[2],metricName=_ref16[3],factor=_ref16[4],offset=_ref16[5];metrics[metricName]={messageId:parseInt(messageId,10),signalName:signalName,factor:parseFloat(factor),offset:parseFloat(offset)};return metrics;},{});}},{key:\"_newSymbols\",value:function _newSymbols(){return\"\\n    NS_DESC_\\n    CM_\\n    BA_DEF_\\n    BA_\\n    VAL_\\n    CAT_DEF_\\n    CAT_\\n    FILTER\\n    BA_DEF_DEF_\\n    EV_DATA_\\n    ENVVAR_DATA_\\n    SGTYPE_\\n    SGTYPE_VAL_\\n    BA_DEF_SGTYPE_\\n    BA_SGTYPE_\\n    SIG_TYPE_REF_\\n    VAL_TABLE_\\n    SIG_GROUP_\\n    SIG_VALTYPE_\\n    SIGTYPE_VALTYPE_\\n    BO_TX_BU_\\n    BA_DEF_REL_\\n    BA_REL_\\n    BA_DEF_DEF_REL_\\n    BU_SG_REL_\\n    BU_EV_REL_\\n    BU_BO_REL_\\n    SG_MUL_VAL_\";}}]);return DBC;}();/* harmony default export */ __webpack_exports__[\"default\"] = (DBC);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1).Buffer))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Coding standard for this project defined @ https://github.com/MatthewSH/standards/blob/master/JavaScript.md\n\n\nexports = module.exports = function rightPad (_string, _length, _char) {\n  if (typeof _string !== 'string') {\n    throw new Error('The string parameter must be a string.');\n  }\n  if (_string.length < 1) {\n    throw new Error('The string parameter must be 1 character or longer.');\n  }\n  if (typeof _length !== 'number') {\n    throw new Error('The length parameter must be a number.');\n  }\n  if(typeof _char !== 'string' && _char) {\n    throw new Error('The character parameter must be a string.');\n  }\n\n  var i = -1;\n  _length = _length - _string.length;\n  if (!_char && _char !== 0) {\n    _char = ' ';\n  }\n  while (++i < _length) {\n    _string += _char;\n  }\n\n  return _string;\n}\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__LogEntries__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__config__ = __webpack_require__(13);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var CloudLog=function(){function CloudLog(){_classCallCheck(this,CloudLog);__WEBPACK_IMPORTED_MODULE_0__LogEntries__[\"a\" /* default */].init({token:__WEBPACK_IMPORTED_MODULE_1__config__[\"a\" /* LOGENTRIES_TOKEN */],no_format:true,catchall:false});this.context={};}_createClass(CloudLog,[{key:\"bind\",value:function bind(obj){this.context.update(obj);}},{key:\"emit\",value:function emit(message){var level=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"log\";if(typeof global.__JEST__!==\"undefined\"){// Don't log in testing environment\nreturn;}var entry={ctx:this.context,created:new Date().getTime()/1000,msg:message,src:\"JSCloudLog\"};if(level===\"log\"){__WEBPACK_IMPORTED_MODULE_0__LogEntries__[\"a\" /* default */].log(entry);}else if(level===\"warn\"){__WEBPACK_IMPORTED_MODULE_0__LogEntries__[\"a\" /* default */].warn(entry);}else if(level===\"error\"){__WEBPACK_IMPORTED_MODULE_0__LogEntries__[\"a\" /* default */].error(entry);}}},{key:\"log\",value:function log(message){this.emit(message);}},{key:\"warn\",value:function warn(message){this.emit(message,\"warn\");}},{key:\"error\",value:function error(message){this.emit(message,\"error\");}}]);return CloudLog;}();/* harmony default export */ __webpack_exports__[\"a\"] = (new CloudLog());\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(2)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};// Vendored from https://github.com/rapid7/le_js, which is broken with webpack.\n/* eslint-disable */if(typeof window===\"undefined\"){// eslint-disable-line no-use-before-define\nvar window=self;}var _indexOf=function _indexOf(array,obj){for(var i=0;i<array.length;i++){if(obj===array[i]){return i;}}return-1;};// Obtain a browser-specific XHR object\nvar _getAjaxObject=function _getAjaxObject(){if(typeof XDomainRequest!==\"undefined\"){// We're using IE8/9\nreturn new XDomainRequest();}return new XMLHttpRequest();};/**\n * A single log event stream.\n * @constructor\n * @param {Object} options\n */function LogStream(options){/**\n   * @const\n   * @type {string} */var _traceCode=options.trace?(Math.random()+Math.PI).toString(36).substring(2,10):null;/** @type {string} */var _pageInfo=options.page_info;/** @type {string} */var _token=options.token;/** @type {boolean} */var _print=options.print;/** @type {boolean} */var _noFormat=options.no_format;/** @type {boolean} */var _SSL=function(){if(typeof XDomainRequest===\"undefined\"){return options.ssl;}// If we're relying on XDomainRequest, we\n// must adhere to the page's encryption scheme.\nreturn window.location.protocol===\"https:\"?true:false;}();/** @type {string} */var _endpoint;if(window.LEENDPOINT){_endpoint=window.LEENDPOINT;}else if(_noFormat){_endpoint=\"webhook.logentries.com/noformat\";}else{_endpoint=\"js.logentries.com/v1\";}_endpoint=(_SSL?\"https://\":\"http://\")+_endpoint+\"/logs/\"+_token;/**\n   * Flag to prevent further invocations on network err\n   ** @type {boolean} */var _shouldCall=true;/** @type {Array.<string>} */var _backlog=[];/** @type {boolean} */var _active=false;/** @type {boolean} */var _sentPageInfo=false;var _apiCall=function _apiCall(token,data){_active=true;var request=_getAjaxObject();if(_shouldCall){if(request.constructor===XMLHttpRequest){// Currently we don't support fine-grained error\n// handling in older versions of IE\nrequest.onreadystatechange=function(){if(request.readyState===4){// Handle any errors\nif(request.status>=400){console.error(\"Couldn't submit events.\");if(request.status===410){// This API version has been phased out\nconsole.warn(\"This version of le_js is no longer supported!\");}}else{if(request.status===301){// Server issued a deprecation warning\nconsole.warn(\"This version of le_js is deprecated! Consider upgrading.\");}if(_backlog.length>0){// Submit the next event in the backlog\n_apiCall(token,_backlog.shift());}else{_active=false;}}}};}else{request.onload=function(){if(_backlog.length>0){// Submit the next event in the backlog\n_apiCall(token,_backlog.shift());}else{_active=false;}};}request.open(\"POST\",_endpoint,true);if(request.constructor===XMLHttpRequest){request.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");request.setRequestHeader(\"Content-type\",\"application/json\");}if(request.overrideMimeType){request.overrideMimeType(\"text\");}request.send(data);}};var _getEvent=function _getEvent(){var raw=null;var args=Array.prototype.slice.call(arguments);if(args.length===0){throw new Error(\"No arguments!\");}else if(args.length===1){raw=args[0];}else{// Handle a variadic overload,\n// e.g. _rawLog(\"some text \", x, \" ...\", 1);\nraw=args;}return raw;};var _agentInfo=function _agentInfo(){var nav=window.navigator||{doNotTrack:undefined};var screen=window.screen||{};var location=window.location||{};return{url:location.pathname,referrer:document.referrer,screen:{width:screen.width,height:screen.height},window:{width:window.innerWidth,height:window.innerHeight},browser:{name:nav.appName,version:nav.appVersion,cookie_enabled:nav.cookieEnabled,do_not_track:nav.doNotTrack},platform:nav.platform};};// Single arg stops the compiler arity warning\nvar _rawLog=function _rawLog(msg){var event=_getEvent.apply(this,arguments);var data={event:event};// Add agent info if required\nif(_pageInfo!==\"never\"){if(!_sentPageInfo||_pageInfo===\"per-entry\"){_sentPageInfo=true;if(typeof event.screen===\"undefined\"&&typeof event.browser===\"undefined\")_rawLog(_agentInfo()).level(\"PAGE\").send();}}if(_traceCode){data.trace=_traceCode;}return{level:function level(l){// Don't log PAGE events to console\n// PAGE events are generated for the agentInfo function\nif(_print&&typeof console!==\"undefined\"&&l!==\"PAGE\"){var serialized=null;if(typeof XDomainRequest!==\"undefined\"){// We're using IE8/9\nserialized=data.trace+\" \"+data.event;}try{console[l.toLowerCase()].call(console,serialized||data);}catch(ex){// IE compat fix\nconsole.log(serialized||data);}}data.level=l;return{send:function send(){var cache=[];var serialized=JSON.stringify(data,function(key,value){if(typeof value===\"undefined\"){return\"undefined\";}else if((typeof value===\"undefined\"?\"undefined\":_typeof(value))===\"object\"&&value!==null){if(_indexOf(cache,value)!==-1){// We've seen this object before;\n// return a placeholder instead to prevent\n// cycles\nreturn\"<?>\";}cache.push(value);}return value;});if(_active){_backlog.push(serialized);}else{_apiCall(_token,serialized);}}};}};};if(options.catchall){var oldHandler=window.onerror;var newHandler=function newHandler(msg,url,line){_rawLog({error:msg,line:line,location:url}).level(\"ERROR\").send();if(oldHandler){return oldHandler(msg,url,line);}else{return false;}};window.onerror=newHandler;}/** @expose */this.log=_rawLog;}/**\n * A single log object\n * @constructor\n * @param {Object} options\n */function Logger(options){var logger;// Default values\nvar dict={ssl:true,catchall:false,trace:true,page_info:\"never\",print:false,endpoint:null,token:null};if((typeof options===\"undefined\"?\"undefined\":_typeof(options))===\"object\")for(var k in options){dict[k]=options[k];}else throw new Error(\"Invalid parameters for createLogStream()\");if(dict.token===null){throw new Error(\"Token not present.\");}else{logger=new LogStream(dict);}var _log=function _log(msg){if(logger){return logger.log.apply(this,arguments);}else throw new Error(\"You must call LE.init(...) first.\");};// The public interface\nreturn{log:function log(){_log.apply(this,arguments).level(\"LOG\").send();},warn:function warn(){_log.apply(this,arguments).level(\"WARN\").send();},error:function error(){_log.apply(this,arguments).level(\"ERROR\").send();},info:function info(){_log.apply(this,arguments).level(\"INFO\").send();}};}// Array of Logger elements\nvar loggers={};var _getLogger=function _getLogger(name){if(!loggers.hasOwnProperty(name))throw new Error(\"Invalid name for logStream\");return loggers[name];};var _createLogStream=function _createLogStream(options){if(typeof options.name!==\"string\")throw new Error(\"Name not present.\");else if(loggers.hasOwnProperty(options.name))throw new Error(\"A logger with that name already exists!\");loggers[options.name]=new Logger(options);return true;};var _deprecatedInit=function _deprecatedInit(options){var dict={name:\"default\"};if((typeof options===\"undefined\"?\"undefined\":_typeof(options))===\"object\")for(var k in options){dict[k]=options[k];}else if(typeof options===\"string\")dict.token=options;else throw new Error(\"Invalid parameters for init()\");return _createLogStream(dict);};var _destroyLogStream=function _destroyLogStream(name){if(typeof name===\"undefined\"){name=\"default\";}delete loggers[name];};// The public interface\n/* harmony default export */ __webpack_exports__[\"a\"] = ({init:_deprecatedInit,createLogStream:_createLogStream,to:_getLogger,destroy:_destroyLogStream,log:function log(){for(var k in loggers){loggers[k].log.apply(this,arguments);}},warn:function warn(){for(var k in loggers){loggers[k].warn.apply(this,arguments);}},error:function error(){for(var k in loggers){loggers[k].error.apply(this,arguments);}},info:function info(){for(var k in loggers){loggers[k].info.apply(this,arguments);}}});\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export GITHUB_CLIENT_ID */\n/* unused harmony export GITHUB_REDIRECT_URL */\n/* unused harmony export GITHUB_AUTH_TOKEN_KEY */\n/* unused harmony export OPENDBC_SOURCE_REPO */\n/* unused harmony export USE_UNLOGGER */\n/* unused harmony export UNLOGGER_HOST */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LOGENTRIES_TOKEN; });\n/* unused harmony export PART_SEGMENT_LENGTH */\n/* unused harmony export CAN_GRAPH_MAX_POINTS */\n/* unused harmony export STREAMING_WINDOW */\n/* unused harmony export EXPLORER_URL */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_url__ = __webpack_require__(14);\nvar ENV= true?\"prod\":\"debug\";var ENV_GITHUB_CLIENT_ID={debug:\"f1e42d14f45491f9ca34\",prod:\"4b43250e7499a97d62a5\"};var GITHUB_CLIENT_ID=ENV_GITHUB_CLIENT_ID[ENV];var ENV_GITHUB_REDIRECT_URL={debug:\"http://127.0.0.1:1235/callback\",prod:\"https://api.comma.ai/cabana/ghcallback\"};var GITHUB_REDIRECT_URL=ENV_GITHUB_REDIRECT_URL[ENV];var GITHUB_AUTH_TOKEN_KEY=\"gh_access_token\";var OPENDBC_SOURCE_REPO=\"commaai/opendbc\";var USE_UNLOGGER=typeof window!==\"undefined\"&&Object(__WEBPACK_IMPORTED_MODULE_0__utils_url__[\"a\" /* getUrlParameter */])(\"unlogger\")!==null;var UNLOGGER_HOST=\"http://localhost:8080/unlogger\";var LOGENTRIES_TOKEN=\"4bc98019-8277-4fe0-867c-ed21ea843cc5\";var PART_SEGMENT_LENGTH=3;var CAN_GRAPH_MAX_POINTS=5000;var STREAMING_WINDOW=60;var ENV_EXPLORER_URL={debug:\"http://127.0.0.1:3000/\",prod:\"https://my.comma.ai/\"};var EXPLORER_URL=ENV_EXPLORER_URL[ENV];\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export objToQuery */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getUrlParameter;\n/* unused harmony export modifyQueryParameters */\n/* eslint-disable no-restricted-globals*/function objToQuery(obj){return Object.keys(obj).map(function(k){return k+\"=\"+encodeURIComponent(decodeURIComponent(obj[k]));}).join(\"&\");}function getUrlParameter(name){var location=window.location;name=name.replace(/[[]/,\"\\\\[\").replace(/[\\]]/,\"\\\\]\");var regex=new RegExp(\"[\\\\?&]\"+name+\"=([^&#]*)\");var results=regex.exec(location.search);return results===null?null:decodeURIComponent(results[1].replace(/\\+/g,\" \"));}function modifyQueryParameters(_ref){var add=_ref.add,remove=_ref.remove;var regex=new RegExp(\"[\\\\?&]([^&#]+)=([^&#]*)\");var results=regex.exec(location.search);var params={};if(results!=null){for(var i=1;i<results.length-1;i+=2){var key=results[i],value=results[i+1];params[key]=value;}for(var _key in params){if(remove.indexOf(_key)!==-1){delete params[_key];}}params=Object.assign({},params,add);}else{params=add;}return location.origin+location.pathname+\"?\"+objToQuery(params);}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var BoardUnit=function(){function BoardUnit(name){_classCallCheck(this,BoardUnit);this.name=name;this.attributes={};this.comment=null;}_createClass(BoardUnit,[{key:\"text\",value:function text(){return this.name;}}]);return BoardUnit;}();/* harmony default export */ __webpack_exports__[\"a\"] = (BoardUnit);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export wheelSpeeds */\n/* unused harmony export ego */\n/* unused harmony export controls */\n/* unused harmony export flags */\n/* unused harmony export ubloxGnss */\n/* unused harmony export health */\n/* unused harmony export thermalCPU */\n/* unused harmony export thermalData */\n/* unused harmony export thermalFreeSpace */\n/* unused harmony export signalMap */\n/* unused harmony export addressForName */\n/* unused harmony export nameForAddress */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isLogAddress;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = frameForAddress;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__frame__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__signal__ = __webpack_require__(3);\nvar wheelSpeeds={FrontLeftWheel:shortSignal({index:0,factor:0.001}),FrontRightWheel:shortSignal({index:1,factor:0.001}),RearLeftWheel:shortSignal({index:2,factor:0.001}),RearRightWheel:shortSignal({index:3,factor:0.001})};var ego={VEgo:shortSignal({index:0,factor:0.001}),AEgo:shortSignal({index:1,factor:0.001}),VEgoRaw:shortSignal({index:2,factor:0.001}),YawRate:shortSignal({index:3,factor:0.001})};var controls={SteeringAngle:longSignal({index:0,factor:0.001}),Brake:shortSignal({index:2,factor:0.001}),Gas:shortSignal({index:3,factor:0.001})};var flags={LeftBlinker:boolSignal({index:0}),RightBlinker:boolSignal({index:1}),GenericToggle:boolSignal({index:2}),DoorOpen:boolSignal({index:3}),SeatbeltUnlatched:boolSignal({index:4}),GasPressed:boolSignal({index:5}),BrakeLights:boolSignal({index:6}),SteeringPressed:boolSignal({index:7}),Standstill:boolSignal({index:8}),\"CruiseState.Enabled\":boolSignal({index:9}),\"CruiseState.Available\":boolSignal({index:10}),\"CruiseState.Standstill\":boolSignal({index:11}),GearShifter:{startBit:15,size:4,unsigned:true},\"CruiseState.Speed\":charSignal({index:2})};var ubloxGnss={RcvTow:longSignal({index:0}),GpsWeek:shortSignal({index:2}),LeapSeconds:{startBit:55,size:8},NumMeas:{startBit:63,size:8}};var health={Voltage:shortSignal({index:0}),Current:charSignal({index:2}),Started:boolSignal({index:24}),ControlsAllowed:boolSignal({index:25}),GasInterceptorDetected:boolSignal({index:26}),StartedSignalDetected:boolSignal({index:27})};var thermalCPU={Cpu0:shortSignal({index:0,unsigned:true}),Cpu1:shortSignal({index:1,unsigned:true}),Cpu2:shortSignal({index:2,unsigned:true}),Cpu3:shortSignal({index:3,unsigned:true})};var thermalData={Mem:shortSignal({index:0,unsigned:true}),Gpu:shortSignal({index:1,unsigned:true}),FanSpeed:shortSignal({index:2,unsigned:true}),BatteryPercent:charSignal({index:6,unsigned:true}),UsbOnline:boolSignal({index:56}),Started:boolSignal({index:57})};var thermalFreeSpace={FreeSpace:longSignal({index:0,unsigned:true,factor:0.000000001})};var signalMap={\"CarState:WheelSpeeds\":wheelSpeeds,\"CarState:Ego\":ego,\"CarState:Controls\":controls,\"CarState:Flags\":flags,\"UbloxGnss:MeasurementReport\":ubloxGnss,\"Health:Data\":health,\"Thermal:CPU\":thermalCPU,\"Thermal:Data\":thermalData,\"Thermal:FreeSpace\":thermalFreeSpace};var ADDRESS_LIST=[];Object.keys(signalMap).forEach(function(name){Object.keys(signalMap[name]).forEach(function(signal){signalMap[name][signal]=createSignalEntry(Object.assign({name:signal},signalMap[name][signal]));});addressForName(name);});function createSignalEntry(options){return new __WEBPACK_IMPORTED_MODULE_1__signal__[\"a\" /* default */]({name:options.name,startBit:options.startBit,size:options.size,isLittleEndian:false,isSigned:!options.unsigned,factor:options.factor||1,offset:options.offset||0,unit:options.unit||\"\"});}function longSignal(options){return Object.assign({},options,{size:32,startBit:options.index*32+7});}function shortSignal(options){return Object.assign({},options,{size:16,startBit:options.index*16+7});}function charSignal(options){return Object.assign({},options,{size:8,startBit:options.index*8+7});}function boolSignal(options){return Object.assign({},options,{size:1,startBit:options.index,unsigned:true});}function addressForName(name){var i=ADDRESS_LIST.indexOf(name);if(i===-1){ADDRESS_LIST.push(name);return ADDRESS_LIST.indexOf(name)+0x1000;}return i+0x1000;}function nameForAddress(address){if(address>=0x1000){return ADDRESS_LIST[address-0x1000];}return null;}function isLogAddress(address){return!!nameForAddress(address);}function frameForAddress(address){var name=nameForAddress(address);return new __WEBPACK_IMPORTED_MODULE_0__frame__[\"a\" /* default */]({id:name,name:name,size:8,signals:signalMap[name]});}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.UINT32 = __webpack_require__(18)\nexports.UINT64 = __webpack_require__(19)\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\tC-like unsigned 32 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t36: UINT32( Math.pow(36, 5) )\n\t,\t16: UINT32( Math.pow(16, 7) )\n\t,\t10: UINT32( Math.pow(10, 9) )\n\t,\t2:  UINT32( Math.pow(2, 30) )\n\t}\n\tvar radixCache = {\n\t\t36: UINT32(36)\n\t,\t16: UINT32(16)\n\t,\t10: UINT32(10)\n\t,\t2:  UINT32(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 32 bits integer\n\t * @constructor\n\t * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n\t * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT32 (l, h) {\n\t\tif ( !(this instanceof UINT32) )\n\t\t\treturn new UINT32(l, h)\n\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tthis.remainder = null\n\t\tif (typeof h == 'undefined')\n\t\t\treturn fromNumber.call(this, l)\n\n\t\tif (typeof l == 'string')\n\t\t\treturn fromString.call(this, l, h)\n\n\t\tfromBits.call(this, l, h)\n\t}\n\n\t/**\n\t * Set the current _UINT32_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} low bits\n\t * @param {Number} high bits\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (l, h) {\n\t\tthis._low = l | 0\n\t\tthis._high = h | 0\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT32_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT32_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tvar value = parseInt(s, radix || 10)\n\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT32_ to a number\n\t * @method toNumber\n\t * @return {Number} the converted UINT32\n\t */\n\tUINT32.prototype.toNumber = function () {\n\t\treturn (this._high * 65536) + this._low\n\t}\n\n\t/**\n\t * Convert this _UINT32_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT32\n\t */\n\tUINT32.prototype.toString = function (radix) {\n\t\treturn this.toNumber().toString(radix || 10)\n\t}\n\n\t/**\n\t * Add two _UINT32_. The current _UINT32_ stores the result\n\t * @method add\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.add = function (other) {\n\t\tvar a00 = this._low + other._low\n\t\tvar a16 = a00 >>> 16\n\n\t\ta16 += this._high + other._high\n\n\t\tthis._low = a00 & 0xFFFF\n\t\tthis._high = a16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT32_. The current _UINT32_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.subtract = function (other) {\n\t\t//TODO inline\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT32_. The current _UINT32_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16\n\t\t\tb = b00 + b16\n\t\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\t\ta16b16 overflows the 32bits\n\t\t */\n\t\tvar a16 = this._high\n\t\tvar a00 = this._low\n\t\tvar b16 = other._high\n\t\tvar b00 = other._low\n\n/* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n\t\t// this == 0 or other == 1: nothing to do\n\t\tif ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n\n\t\t// other == 0 or this == 1: this = other\n\t\tif ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n\t\t\tthis._low = other._low\n\t\t\tthis._high = other._high\n\t\t\treturn this\n\t\t}\n*/\n\n\t\tvar c16, c00\n\t\tc00 = a00 * b00\n\t\tc16 = c00 >>> 16\n\n\t\tc16 += a16 * b00\n\t\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\t\tc16 += a00 * b16\n\n\t\tthis._low = c00 & 0xFFFF\n\t\tthis._high = c16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT32_. The current _UINT32_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT32_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.div = function (other) {\n\t\tif ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')\n\n\t\t// other == 1\n\t\tif (other._high == 0 && other._low == 1) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\treturn this\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._low = 0\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\tthis._low = 1\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 16) {\n\t\t\t\t\tthis._high |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._low |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT32_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.negate = function () {\n\t\tvar v = ( ~this._low & 0xFFFF ) + 1\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Equals\n\t * @method eq\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n\t\treturn (this._low == other._low) && (this._high == other._high)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n\t\tif (this._high > other._high) return true\n\t\tif (this._high < other._high) return false\n\t\treturn this._low > other._low\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n\t\tif (this._high < other._high) return true\n\t\tif (this._high > other._high) return false\n\t\treturn this._low < other._low\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.or = function (other) {\n\t\tthis._low |= other._low\n\t\tthis._high |= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.and = function (other) {\n\t\tthis._low &= other._low\n\t\tthis._high &= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.not = function() {\n\t\tthis._low = ~this._low & 0xFFFF\n\t\tthis._high = ~this._high & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.xor = function (other) {\n\t\tthis._low ^= other._low\n\t\tthis._high ^= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n\t\tif (n > 16) {\n\t\t\tthis._low = this._high >> (n - 16)\n\t\t\tthis._high = 0\n\t\t} else if (n == 16) {\n\t\t\tthis._low = this._high\n\t\t\tthis._high = 0\n\t\t} else {\n\t\t\tthis._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )\n\t\t\tthis._high >>= n\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n\t\tif (n > 16) {\n\t\t\tthis._high = this._low << (n - 16)\n\t\t\tthis._low = 0\n\t\t\tif (!allowOverflow) {\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t} else if (n == 16) {\n\t\t\tthis._high = this._low\n\t\t\tthis._low = 0\n\t\t} else {\n\t\t\tthis._high = (this._high << n) | (this._low >> (16-n))\n\t\t\tthis._low = (this._low << n) & 0xFFFF\n\t\t\tif (!allowOverflow) {\n\t\t\t\t// Overflow only allowed on the high bits...\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v << n) | (v >>> (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v >>> n) | (v << (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT32_\n\t * @method clone\n\t * @return {Object} cloned UINT32\n\t */\n\tUINT32.prototype.clone = function () {\n\t\treturn new UINT32(this._low, this._high)\n\t}\n\n\tif (true) {\n\t\t// AMD / RequireJS\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\treturn UINT32\n\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT32\n\t} else {\n\t\t// Browser\n\t\troot['UINT32'] = UINT32\n\t}\n\n})(this)\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\tC-like unsigned 64 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t16: UINT64( Math.pow(16, 5) )\n\t,\t10: UINT64( Math.pow(10, 5) )\n\t,\t2:  UINT64( Math.pow(2, 5) )\n\t}\n\tvar radixCache = {\n\t\t16: UINT64(16)\n\t,\t10: UINT64(10)\n\t,\t2:  UINT64(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 64 bits integer\n\t * @constructor\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * or\n\t * @param {String|Number} integer as a string \t\t | integer as a number\n\t * @param {Number|Undefined} radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT64 (a00, a16, a32, a48) {\n\t\tif ( !(this instanceof UINT64) )\n\t\t\treturn new UINT64(a00, a16, a32, a48)\n\n\t\tthis.remainder = null\n\t\tif (typeof a00 == 'string')\n\t\t\treturn fromString.call(this, a00, a16)\n\n\t\tif (typeof a16 == 'undefined')\n\t\t\treturn fromNumber.call(this, a00)\n\n\t\tfromBits.apply(this, arguments)\n\t}\n\n\t/**\n\t * Set the current _UINT64_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (a00, a16, a32, a48) {\n\t\tif (typeof a32 == 'undefined') {\n\t\t\tthis._a00 = a00 & 0xFFFF\n\t\t\tthis._a16 = a00 >>> 16\n\t\t\tthis._a32 = a16 & 0xFFFF\n\t\t\tthis._a48 = a16 >>> 16\n\t\t\treturn this\n\t\t}\n\n\t\tthis._a00 = a00 | 0\n\t\tthis._a16 = a16 | 0\n\t\tthis._a32 = a32 | 0\n\t\tthis._a48 = a48 | 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT64_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._a00 = value & 0xFFFF\n\t\tthis._a16 = value >>> 16\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT64_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tradix = radix || 10\n\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\t/*\n\t\t\tIn Javascript, bitwise operators only operate on the first 32 bits \n\t\t\tof a number, even though parseInt() encodes numbers with a 53 bits \n\t\t\tmantissa.\n\t\t\tTherefore UINT64(<Number>) can only work on 32 bits.\n\t\t\tThe radix maximum value is 36 (as per ECMA specs) (26 letters + 10 digits)\n\t\t\tmaximum input value is m = 32bits as 1 = 2^32 - 1\n\t\t\tSo the maximum substring length n is:\n\t\t\t36^(n+1) - 1 = 2^32 - 1\n\t\t\t36^(n+1) = 2^32\n\t\t\t(n+1)ln(36) = 32ln(2)\n\t\t\tn = 32ln(2)/ln(36) - 1\n\t\t\tn = 5.189644915687692\n\t\t\tn = 5\n\t\t */\n\t\tvar radixUint = radixPowerCache[radix] || new UINT64( Math.pow(radix, 5) )\n\n\t\tfor (var i = 0, len = s.length; i < len; i += 5) {\n\t\t\tvar size = Math.min(5, len - i)\n\t\t\tvar value = parseInt( s.slice(i, i + size), radix )\n\t\t\tthis.multiply(\n\t\t\t\t\tsize < 5\n\t\t\t\t\t\t? new UINT64( Math.pow(radix, size) )\n\t\t\t\t\t\t: radixUint\n\t\t\t\t)\n\t\t\t\t.add( new UINT64(value) )\n\t\t}\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT64_ to a number (last 32 bits are dropped)\n\t * @method toNumber\n\t * @return {Number} the converted UINT64\n\t */\n\tUINT64.prototype.toNumber = function () {\n\t\treturn (this._a16 * 65536) + this._a00\n\t}\n\n\t/**\n\t * Convert this _UINT64_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT64\n\t */\n\tUINT64.prototype.toString = function (radix) {\n\t\tradix = radix || 10\n\t\tvar radixUint = radixCache[radix] || new UINT64(radix)\n\n\t\tif ( !this.gt(radixUint) ) return this.toNumber().toString(radix)\n\n\t\tvar self = this.clone()\n\t\tvar res = new Array(64)\n\t\tfor (var i = 63; i >= 0; i--) {\n\t\t\tself.div(radixUint)\n\t\t\tres[i] = self.remainder.toNumber().toString(radix)\n\t\t\tif ( !self.gt(radixUint) ) break\n\t\t}\n\t\tres[i-1] = self.toNumber().toString(radix)\n\n\t\treturn res.join('')\n\t}\n\n\t/**\n\t * Add two _UINT64_. The current _UINT64_ stores the result\n\t * @method add\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.add = function (other) {\n\t\tvar a00 = this._a00 + other._a00\n\n\t\tvar a16 = a00 >>> 16\n\t\ta16 += this._a16 + other._a16\n\n\t\tvar a32 = a16 >>> 16\n\t\ta32 += this._a32 + other._a32\n\n\t\tvar a48 = a32 >>> 16\n\t\ta48 += this._a48 + other._a48\n\n\t\tthis._a00 = a00 & 0xFFFF\n\t\tthis._a16 = a16 & 0xFFFF\n\t\tthis._a32 = a32 & 0xFFFF\n\t\tthis._a48 = a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT64_. The current _UINT64_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.subtract = function (other) {\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT64_. The current _UINT64_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16 + a32 + a48\n\t\t\tb = b00 + b16 + b32 + b48\n\t\t\ta*b = (a00 + a16 + a32 + a48)(b00 + b16 + b32 + b48)\n\t\t\t\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32 + a16b48\n\t\t\t\t+ a32b00 + a32b16 + a32b32 + a32b48\n\t\t\t\t+ a48b00 + a48b16 + a48b32 + a48b48\n\n\t\t\ta16b48, a32b32, a48b16, a48b32 and a48b48 overflow the 64 bits\n\t\t\tso it comes down to:\n\t\t\ta*b\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32\n\t\t\t\t+ a32b00 + a32b16\n\t\t\t\t+ a48b00\n\t\t\t\t= a00b00\n\t\t\t\t+ a00b16 + a16b00\n\t\t\t\t+ a00b32 + a16b16 + a32b00\n\t\t\t\t+ a00b48 + a16b32 + a32b16 + a48b00\n\t\t */\n\t\tvar a00 = this._a00\n\t\tvar a16 = this._a16\n\t\tvar a32 = this._a32\n\t\tvar a48 = this._a48\n\t\tvar b00 = other._a00\n\t\tvar b16 = other._a16\n\t\tvar b32 = other._a32\n\t\tvar b48 = other._a48\n\n\t\tvar c00 = a00 * b00\n\n\t\tvar c16 = c00 >>> 16\n\t\tc16 += a00 * b16\n\t\tvar c32 = c16 >>> 16\n\t\tc16 &= 0xFFFF\n\t\tc16 += a16 * b00\n\n\t\tc32 += c16 >>> 16\n\t\tc32 += a00 * b32\n\t\tvar c48 = c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a16 * b16\n\t\tc48 += c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a32 * b00\n\n\t\tc48 += c32 >>> 16\n\t\tc48 += a00 * b48\n\t\tc48 &= 0xFFFF\n\t\tc48 += a16 * b32\n\t\tc48 &= 0xFFFF\n\t\tc48 += a32 * b16\n\t\tc48 &= 0xFFFF\n\t\tc48 += a48 * b00\n\n\t\tthis._a00 = c00 & 0xFFFF\n\t\tthis._a16 = c16 & 0xFFFF\n\t\tthis._a32 = c32 & 0xFFFF\n\t\tthis._a48 = c48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT64_. The current _UINT64_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT64_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.div = function (other) {\n\t\tif ( (other._a16 == 0) && (other._a32 == 0) && (other._a48 == 0) ) {\n\t\t\tif (other._a00 == 0) throw Error('division by zero')\n\n\t\t\t// other == 1: this\n\t\t\tif (other._a00 == 1) {\n\t\t\t\tthis.remainder = new UINT64(0)\n\t\t\t\treturn this\n\t\t\t}\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._a00 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT64(0)\n\t\t\tthis._a00 = 1\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 48) {\n\t\t\t\t\tthis._a48 |= 1 << (i - 48)\n\t\t\t\t} else if (i >= 32) {\n\t\t\t\t\tthis._a32 |= 1 << (i - 32)\n\t\t\t\t} else if (i >= 16) {\n\t\t\t\t\tthis._a16 |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._a00 |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT64_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.negate = function () {\n\t\tvar v = ( ~this._a00 & 0xFFFF ) + 1\n\t\tthis._a00 = v & 0xFFFF\n\t\tv = (~this._a16 & 0xFFFF) + (v >>> 16)\n\t\tthis._a16 = v & 0xFFFF\n\t\tv = (~this._a32 & 0xFFFF) + (v >>> 16)\n\t\tthis._a32 = v & 0xFFFF\n\t\tthis._a48 = (~this._a48 + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\n\t * @method eq\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.equals = UINT64.prototype.eq = function (other) {\n\t\treturn (this._a48 == other._a48) && (this._a00 == other._a00)\n\t\t\t && (this._a32 == other._a32) && (this._a16 == other._a16)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.greaterThan = UINT64.prototype.gt = function (other) {\n\t\tif (this._a48 > other._a48) return true\n\t\tif (this._a48 < other._a48) return false\n\t\tif (this._a32 > other._a32) return true\n\t\tif (this._a32 < other._a32) return false\n\t\tif (this._a16 > other._a16) return true\n\t\tif (this._a16 < other._a16) return false\n\t\treturn this._a00 > other._a00\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.lessThan = UINT64.prototype.lt = function (other) {\n\t\tif (this._a48 < other._a48) return true\n\t\tif (this._a48 > other._a48) return false\n\t\tif (this._a32 < other._a32) return true\n\t\tif (this._a32 > other._a32) return false\n\t\tif (this._a16 < other._a16) return true\n\t\tif (this._a16 > other._a16) return false\n\t\treturn this._a00 < other._a00\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.or = function (other) {\n\t\tthis._a00 |= other._a00\n\t\tthis._a16 |= other._a16\n\t\tthis._a32 |= other._a32\n\t\tthis._a48 |= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.and = function (other) {\n\t\tthis._a00 &= other._a00\n\t\tthis._a16 &= other._a16\n\t\tthis._a32 &= other._a32\n\t\tthis._a48 &= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.xor = function (other) {\n\t\tthis._a00 ^= other._a00\n\t\tthis._a16 ^= other._a16\n\t\tthis._a32 ^= other._a32\n\t\tthis._a48 ^= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.not = function() {\n\t\tthis._a00 = ~this._a00 & 0xFFFF\n\t\tthis._a16 = ~this._a16 & 0xFFFF\n\t\tthis._a32 = ~this._a32 & 0xFFFF\n\t\tthis._a48 = ~this._a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftRight = UINT64.prototype.shiftr = function (n) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a00 = this._a48 >> (n - 48)\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a00 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a00 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a48 = 0\n\t\t} else {\n\t\t\tthis._a00 = ( (this._a00 >> n) | (this._a16 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a48 = (this._a48 >> n) & 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftLeft = UINT64.prototype.shiftl = function (n, allowOverflow) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a48 = this._a00 << (n - 48)\n\t\t\tthis._a32 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a48 = (this._a16 << n) | (this._a00 >> (16-n))\n\t\t\tthis._a32 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a48 = (this._a32 << n) | (this._a16 >> (16-n))\n\t\t\tthis._a32 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a00 = 0\n\t\t} else {\n\t\t\tthis._a48 = (this._a48 << n) | (this._a32 >> (16-n))\n\t\t\tthis._a32 = ( (this._a32 << n) | (this._a16 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a00 = (this._a00 << n) & 0xFFFF\n\t\t}\n\t\tif (!allowOverflow) {\n\t\t\tthis._a48 &= 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateLeft = UINT64.prototype.rotl = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// B.C.D.A rotl(16)\n\t\t\t// C.D.A.B rotl(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high << n) | (low >>> (32 - n))\n\t\tvar _low = (low << n) | (high >>> (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateRight = UINT64.prototype.rotr = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// D.A.B.C rotr(16)\n\t\t\t// C.D.A.B rotr(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high >>> n) | (low << (32 - n))\n\t\tvar _low = (low >>> n) | (high << (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT64_\n\t * @method clone\n\t * @return {Object} cloned UINT64\n\t */\n\tUINT64.prototype.clone = function () {\n\t\treturn new UINT64(this._a00, this._a16, this._a32, this._a48)\n\t}\n\n\tif (true) {\n\t\t// AMD / RequireJS\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\treturn UINT64\n\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT64\n\t} else {\n\t\t// Browser\n\t\troot['UINT64'] = UINT64\n\t}\n\n})(this)\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// af9125d8e28f940cca50.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/cabana/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap af9125d8e28f940cca50","function findMaxByteStateChangeCount(messages) {\n  return Object.values(messages)\n    .map(m => m.byteStateChangeCounts)\n    .reduce((counts, countArr) => counts.concat(countArr), []) // flatten arrays\n    .reduce((count1, count2) => (count1 > count2 ? count1 : count2), 0); // find max\n}\n\nfunction addCanMessage(\n  canMessage,\n  dbc,\n  canStartTime,\n  messages,\n  prevMsgEntries,\n  byteStateChangeCountsByMessage\n) {\n  var { address, busTime, data, bus } = canMessage;\n  var id = bus + \":\" + address.toString(16);\n\n  if (messages[id] === undefined)\n    messages[id] = createMessageSpec(dbc, address, id, bus);\n\n  const prevMsgEntry =\n    messages[id].entries.length > 0\n      ? messages[id].entries[messages[id].entries.length - 1]\n      : prevMsgEntries[id] || null;\n\n  if (\n    byteStateChangeCountsByMessage[id] &&\n    messages[id].byteStateChangeCounts.every(c => c === 0)\n  ) {\n    messages[id].byteStateChangeCounts = byteStateChangeCountsByMessage[id];\n  }\n\n  const { msgEntry, byteStateChangeCounts } = parseMessage(\n    dbc,\n    busTime,\n    address,\n    data,\n    canStartTime,\n    prevMsgEntry\n  );\n\n  messages[id].byteStateChangeCounts = byteStateChangeCounts.map(\n    (count, idx) => messages[id].byteStateChangeCounts[idx] + count\n  );\n\n  messages[id].entries.push(msgEntry);\n\n  return msgEntry;\n}\n\nfunction createMessageSpec(dbc, address, id, bus) {\n  const frame = dbc.getMessageFrame(address);\n  const size = frame ? frame.size : 8;\n\n  return {\n    address: address,\n    id: id,\n    bus: bus,\n    entries: [],\n    frame: frame,\n    byteColors: Array(size).fill(0),\n    byteStateChangeCounts: Array(size).fill(0)\n  };\n}\n\nfunction determineByteStateChangeTimes(\n  hexData,\n  time,\n  msgSize,\n  lastParsedMessage\n) {\n  const byteStateChangeCounts = Array(msgSize).fill(0);\n  let byteStateChangeTimes;\n\n  if (!lastParsedMessage) {\n    byteStateChangeTimes = Array(msgSize).fill(time);\n  } else {\n    byteStateChangeTimes = Array.from(lastParsedMessage.byteStateChangeTimes);\n\n    for (let i = 0; i < byteStateChangeTimes.length; i++) {\n      const currentData = hexData.substr(i * 2, 2),\n        prevData = lastParsedMessage.hexData.substr(i * 2, 2);\n\n      if (currentData !== prevData) {\n        byteStateChangeTimes[i] = time;\n        byteStateChangeCounts[i] = 1;\n      }\n    }\n  }\n\n  return { byteStateChangeTimes, byteStateChangeCounts };\n}\n\nfunction createMessageEntry(\n  dbc,\n  address,\n  time,\n  relTime,\n  data,\n  byteStateChangeTimes\n) {\n  return {\n    signals: dbc.getSignalValues(address, data),\n    time,\n    relTime,\n    hexData: Buffer.from(data).toString(\"hex\"),\n    byteStateChangeTimes,\n    updated: Date.now()\n  };\n}\n\nfunction parseMessage(dbc, time, address, data, timeStart, lastParsedMessage) {\n  let hexData;\n  if (typeof data === \"string\") {\n    hexData = data;\n    data = Buffer.from(data, \"hex\");\n  } else {\n    hexData = Buffer.from(data).toString(\"hex\");\n  }\n  const msgSpec = dbc.getMessageFrame(address);\n  const msgSize = msgSpec ? msgSpec.size : 8;\n  const relTime = time - timeStart;\n\n  const {\n    byteStateChangeTimes,\n    byteStateChangeCounts\n  } = determineByteStateChangeTimes(\n    hexData,\n    relTime,\n    msgSize,\n    lastParsedMessage\n  );\n  const msgEntry = createMessageEntry(\n    dbc,\n    address,\n    time,\n    relTime,\n    data,\n    byteStateChangeTimes\n  );\n\n  return { msgEntry, byteStateChangeCounts };\n}\n\nconst BIG_ENDIAN_START_BITS = [];\nfor (let i = 0; i < 64; i += 8) {\n  for (let j = 7; j > -1; j--) {\n    BIG_ENDIAN_START_BITS.push(i + j);\n  }\n}\n\nfunction bigEndianBitIndex(matrixBitIndex) {\n  return BIG_ENDIAN_START_BITS.indexOf(matrixBitIndex);\n}\n\nfunction matrixBitNumber(bigEndianIndex) {\n  return BIG_ENDIAN_START_BITS[bigEndianIndex];\n}\n\nfunction setMessageByteColors(message, maxByteStateChangeCount) {\n  message.byteColors = message.byteStateChangeCounts\n    .map(\n      count =>\n        isNaN(count)\n          ? 0\n          : Math.min(255, 75 + 180 * (count / maxByteStateChangeCount))\n    )\n    .map(red => \"rgb(\" + Math.round(red) + \",0,0)\");\n\n  return message;\n}\n\nexport default {\n  bigEndianBitIndex,\n  addCanMessage,\n  createMessageSpec,\n  matrixBitNumber,\n  parseMessage,\n  findMaxByteStateChangeCount,\n  setMessageByteColors,\n  createMessageEntry\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/dbc.js","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 1\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 2\n// module chunks = 0","import DbcUtils from \"../../utils/dbc\";\n\nexport default class Signal {\n  constructor({\n    name,\n    startBit = 0,\n    size = 0,\n    isLittleEndian = true,\n    isSigned = false,\n    isFloat = false,\n    factor = 1,\n    offset = 0,\n    unit = \"\",\n    receiver = [\"XXX\"],\n    comment = null,\n    multiplex = null,\n    min = null,\n    max = null,\n    valueDescriptions = new Map()\n  }) {\n    Object.assign(this, {\n      name,\n      startBit,\n      size,\n      isLittleEndian,\n      isSigned,\n      isFloat,\n      factor,\n      offset,\n      unit,\n      receiver,\n      comment,\n      multiplex,\n      valueDescriptions\n    });\n\n    const uid = Math.random().toString(36);\n\n    if (min == null) {\n      min = this.calculateMin();\n    }\n    if (max == null) {\n      max = this.calculateMax();\n    }\n\n    const colors = this.generateColors();\n\n    Object.assign(this, { min, max, uid, colors });\n  }\n\n  text() {\n    const multiplex = this.multiplex ? \" \" + this.multiplex : \"\";\n    const byteOrder = this.isLittleEndian ? 1 : 0;\n    const signedChar = this.isSigned ? \"-\" : \"+\";\n\n    return (\n      `SG_ ${this.name}${multiplex} : ` +\n      `${this.startBit}|${this.size}@${byteOrder}${signedChar}` +\n      ` (${this.factor},${this.offset})` +\n      ` [${this.min}|${this.max}]` +\n      ` \"${this.unit}\" ${this.receiver}`\n    );\n  }\n\n  valueDescriptionText(msgId) {\n    const entryPairs = Array.from(this.valueDescriptions.entries());\n    const values = entryPairs.reduce(\n      (str, [value, desc]) => str + value + ` \"${desc}\" `,\n      \"\"\n    );\n    return `VAL_ ${msgId} ${this.name} ${values};`;\n  }\n\n  lsbBitIndex() {\n    // Returns LSB bit index in matrix order (see AddSignals.js)\n\n    if (this.isLittleEndian) {\n      return this.startBit;\n    } else {\n      const lsbBitNumber = this.lsbBitNumber();\n\n      return DbcUtils.matrixBitNumber(lsbBitNumber);\n    }\n  }\n\n  lsbBitNumber() {\n    // Returns LSB bit number in big endian ordering\n\n    return DbcUtils.bigEndianBitIndex(this.startBit) + this.size - 1;\n  }\n\n  msbBitIndex() {\n    if (this.isLittleEndian) {\n      return this.startBit + this.size - 1;\n    } else {\n      return this.startBit;\n    }\n  }\n\n  littleEndianBitDescription(bitIndex) {\n    const bitRange = [this.startBit, this.startBit + this.size - 1];\n    if (bitIndex < bitRange[0] || bitIndex > bitRange[1]) {\n      return null;\n    } else {\n      const bitNumber = bitIndex - bitRange[0];\n      const isLsb = bitIndex === bitRange[0];\n      const isMsb = bitIndex === bitRange[1];\n      return { bitNumber, isLsb, isMsb };\n    }\n  }\n\n  bigEndianBitDescription(bitIndex) {\n    const start = DbcUtils.bigEndianBitIndex(this.startBit);\n    const range = [start, start + this.size - 1];\n    const bitNumber = DbcUtils.bigEndianBitIndex(bitIndex);\n\n    if (bitNumber < range[0] || bitNumber > range[1]) {\n      return null;\n    }\n\n    const isLsb = bitNumber === range[1];\n    const isMsb = bitIndex === this.startBit;\n    return { bitNumber, isLsb, isMsb, range };\n  }\n\n  bitDescription(bitIndex) {\n    if (this.isLittleEndian) {\n      return this.littleEndianBitDescription(bitIndex);\n    } else {\n      return this.bigEndianBitDescription(bitIndex);\n    }\n  }\n\n  calculateRawRange() {\n    let rawRange = Math.pow(2, this.size);\n    if (this.isSigned) {\n      rawRange /= 2;\n    }\n    return [this.isSigned ? -1 * rawRange : 0, rawRange - 1];\n  }\n\n  calculateMin() {\n    const rawMin = this.calculateRawRange()[0];\n    return this.offset + rawMin * this.factor;\n  }\n\n  calculateMax() {\n    const rawMax = this.calculateRawRange()[1];\n    return this.offset + rawMax * this.factor;\n  }\n\n  generateColors() {\n    let colors = Array(3);\n    for (let i = 0; i < 3; i++) {\n      colors[i] = Math.floor(Math.random() * 211);\n    }\n\n    return colors;\n  }\n\n  equals(otherSignal) {\n    return (\n      otherSignal.name === this.name &&\n      otherSignal.startBit === this.startBit &&\n      otherSignal.size === this.size &&\n      otherSignal.isLittleEndian === this.isLittleEndian &&\n      otherSignal.isSigned === this.isSigned &&\n      otherSignal.isFloat === this.isFloat &&\n      otherSignal.factor === this.factor &&\n      otherSignal.offset === this.offset &&\n      otherSignal.unit === this.unit &&\n      otherSignal.receiver.length === this.receiver.length &&\n      otherSignal.receiver.every((v, i) => v === this.receiver[i]) &&\n      otherSignal.comment === this.comment &&\n      otherSignal.multiplex === this.multiplex\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/can/signal.js","export default class Frame {\n  constructor({\n    name,\n    id = 0,\n    size = 0,\n    transmitters = [],\n    extended = 0,\n    comment = null,\n    signals = {}\n  }) {\n    Object.assign(this, {\n      name,\n      id,\n      size,\n      transmitters,\n      extended,\n      comment,\n      signals\n    });\n  }\n\n  nextNewTransmitterName() {\n    let txNum = 1,\n      txName;\n    do {\n      txName = \"NEW_TRANSMITTER_\" + txNum;\n      txNum++;\n    } while (this.transmitters.indexOf(txName) !== -1);\n\n    return txName;\n  }\n\n  addTransmitter() {\n    const txName = this.nextNewTransmitterName();\n    this.transmitters.push(txName);\n    return txName;\n  }\n\n  header() {\n    return (\n      `BO_ ${this.id} ${this.name}: ${this.size} ` +\n      `${this.transmitters[0] || \"XXX\"}`\n    );\n  }\n\n  text() {\n    const signals = Object.values(this.signals)\n      .map(signal => \" \" + signal.text()) // indent\n      .join(\"\\n\");\n\n    if (signals.length > 0) {\n      return this.header() + \"\\n\" + signals;\n    } else {\n      return this.header();\n    }\n  }\n\n  copy() {\n    const copy = Object.assign(Object.create(this), this);\n\n    return copy;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/can/frame.js","/* eslint-env worker */\n/* eslint-disable no-restricted-globals */\nimport DBC from \"../models/can/dbc\";\nimport DbcUtils from \"../utils/dbc\";\nimport extend from \"xtend\";\n\nfunction processStreamedCanMessages(\n  newCanMessages,\n  prevMsgEntries,\n  firstCanTime,\n  dbc,\n  lastBusTime,\n  byteStateChangeCountsByMessage,\n  maxByteStateChangeCount\n) {\n  const messages = {};\n  let lastCanTime;\n\n  for (let batch = 0; batch < newCanMessages.length; batch++) {\n    let { time, canMessages } = newCanMessages[batch];\n    canMessages = canMessages.sort((msg1, msg2) => {\n      if (msg1[1] < msg2[1]) {\n        return -1;\n      } else if (msg1[1] > msg2[1]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    let busTimeSum = 0;\n\n    for (let i = 0; i < canMessages.length; i++) {\n      let { address, busTime, data, bus } = canMessages[i];\n\n      let prevBusTime;\n      if (i === 0) {\n        if (lastBusTime === null) {\n          prevBusTime = 0;\n        } else {\n          prevBusTime = lastBusTime;\n        }\n      } else {\n        prevBusTime = canMessages[i - 1].busTime;\n      }\n\n      if (busTime >= prevBusTime) {\n        busTimeSum += busTime - prevBusTime;\n      } else {\n        busTimeSum += 0x10000 - prevBusTime + busTime;\n      }\n      const message = extend(canMessages[i]);\n      message.busTime = time + busTimeSum / 500000.0;\n\n      if (firstCanTime === 0) {\n        firstCanTime = message.busTime;\n      }\n\n      const msgEntry = DbcUtils.addCanMessage(\n        message,\n        dbc,\n        firstCanTime,\n        messages,\n        prevMsgEntries,\n        byteStateChangeCountsByMessage\n      );\n      if (i === canMessages.length - 1) {\n        lastCanTime = msgEntry.relTime;\n      }\n    }\n\n    lastBusTime = canMessages[canMessages.length - 1].busTime;\n    const newMaxByteStateChangeCount = DbcUtils.findMaxByteStateChangeCount(\n      messages\n    );\n\n    if (newMaxByteStateChangeCount > maxByteStateChangeCount) {\n      maxByteStateChangeCount = newMaxByteStateChangeCount;\n    }\n\n    Object.keys(messages).forEach(key => {\n      messages[key] = DbcUtils.setMessageByteColors(\n        messages[key],\n        maxByteStateChangeCount\n      );\n    });\n  }\n\n  self.postMessage({\n    newMessages: messages,\n    seekTime: lastCanTime,\n    lastBusTime,\n    firstCanTime,\n    maxByteStateChangeCount\n  });\n}\n\nself.onmessage = function(e) {\n  const {\n    newCanMessages,\n    prevMsgEntries,\n    firstCanTime,\n    dbcText,\n    lastBusTime,\n    byteStateChangeCountsByMessage,\n    maxByteStateChangeCount\n  } = e.data;\n  const dbc = new DBC(dbcText);\n  processStreamedCanMessages(\n    newCanMessages,\n    prevMsgEntries,\n    firstCanTime,\n    dbc,\n    lastBusTime,\n    byteStateChangeCountsByMessage,\n    maxByteStateChangeCount\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/workers/CanStreamerWorker.worker.js","import rightPad from \"right-pad\";\nimport CloudLog from \"../../logging/CloudLog\";\nimport Signal from \"./signal\";\nimport Frame from \"./frame\";\nimport BoardUnit from \"./BoardUnit\";\nimport DbcUtils from \"../../utils/dbc\";\nimport * as LogSignals from \"./logSignals\";\n\nconst UINT64 = require(\"cuint\").UINT64;\n\nconst DBC_COMMENT_RE = /^CM_ *\"(.*)\";/;\nconst DBC_COMMENT_MULTI_LINE_RE = /^CM_ *\"(.*)/;\n\nconst MSG_RE = /^BO_ (\\w+) (\\w+) *: (\\w+) (\\w+)/;\n\nconst SIGNAL_RE = /^SG_ (\\w+) : (\\d+)\\|(\\d+)@(\\d+)([+|-]) \\(([0-9.+-eE]+),([0-9.+-eE]+)\\) \\[([0-9.+-eE]+)\\|([0-9.+-eE]+)\\] \"(.*)\" (.*)/;\n// Multiplexed signal\nconst MP_SIGNAL_RE = /^SG_ (\\w+) (\\w+) *: (\\d+)\\|(\\d+)@(\\d+)([+|-]) \\(([0-9.+-eE]+),([0-9.+-eE]+)\\) \\[([0-9.+-eE]+)\\|([0-9.+-eE]+)\\] \"(.*)\" (.*)/;\n\nconst VAL_RE = /^VAL_ (\\w+) (\\w+) (.*);/;\nconst VAL_TABLE_RE = /^VAL_TABLE_ (\\w+) (.*);/;\n\nconst MSG_TRANSMITTER_RE = /^BO_TX_BU_ ([0-9]+) *: *(.+);/;\n\nconst SIGNAL_COMMENT_RE = /^CM_ SG_ *(\\w+) *(\\w+) *\"(.*)\";/;\nconst SIGNAL_COMMENT_MULTI_LINE_RE = /^CM_ SG_ *(\\w+) *(\\w+) *\"(.*)/;\n\n// Message Comments (CM_ BO_ )\nconst MESSAGE_COMMENT_RE = /^CM_ BO_ *(\\w+) *\"(.*)\";/;\nconst MESSAGE_COMMENT_MULTI_LINE_RE = /^CM_ BO_ *(\\w+) *\"(.*)/;\n\nconst BOARD_UNIT_RE = /^BU_:(.*)/;\nconst BOARD_UNIT_COMMENT_RE = /^CM_ BU_ *(\\w+) *\"(.*)\";/;\nconst BOARD_UNIT_COMMENT_MULTI_LINE_RE = /^CM_ BU_ *(\\w+) *\"(.*)/;\n\n// Follow ups are used to parse multi-line comment definitions\nconst FOLLOW_UP_DBC_COMMENT = \"FollowUpDbcComment\";\nconst FOLLOW_UP_SIGNAL_COMMENT = \"FollowUpSignalComment\";\nconst FOLLOW_UP_MSG_COMMENT = \"FollowUpMsgComment\";\nconst FOLLOW_UP_BOARD_UNIT_COMMENT = \"FollowUpBoardUnitComment\";\n\nfunction floatOrInt(numericStr) {\n  if (Number.isInteger(numericStr)) {\n    return parseInt(numericStr, 10);\n  } else {\n    return parseFloat(numericStr);\n  }\n}\n\nexport function swapOrder(arr, wordSize, gSize) {\n  const swappedWords = [];\n\n  for (let i = 0; i < arr.length; i += wordSize) {\n    const word = arr.slice(i, i + wordSize);\n    for (let j = wordSize - gSize; j > -gSize; j -= gSize) {\n      swappedWords.push(word.slice(j, j + gSize));\n    }\n  }\n\n  return swappedWords.join(\"\");\n}\n\nexport default class DBC {\n  constructor(dbcString) {\n    this.boardUnits = [];\n    this.comments = [];\n    this.messages = new Map();\n\n    if (dbcString !== undefined) {\n      this.dbcText = dbcString;\n      this.importDbcString(dbcString);\n    }\n  }\n\n  getMessageFrame(address) {\n    if (LogSignals.isLogAddress(address)) {\n      return LogSignals.frameForAddress(address);\n    }\n    return this.messages.get(address);\n  }\n\n  nextNewFrameName() {\n    const messageNames = [];\n\n    for (let msg of this.messages.values()) {\n      messageNames.push(msg.name);\n    }\n\n    let msgNum = 1,\n      msgName;\n    do {\n      msgName = \"NEW_MSG_\" + msgNum;\n      msgNum++;\n    } while (messageNames.indexOf(msgName) !== -1);\n\n    return msgName;\n  }\n\n  updateBoardUnits() {\n    const boardUnitNames = this.boardUnits.map(bu => bu.name);\n    const missingBoardUnits = Array.from(this.messages.entries())\n      .map(([msgId, frame]) => Object.values(frame.signals))\n      .reduce((arr, signals) => arr.concat(signals), [])\n      .map(signal => signal.receiver)\n      .reduce((arr, receivers) => arr.concat(receivers), [])\n      .filter((recv, idx, array) => array.indexOf(recv) === idx)\n      .filter(recv => boardUnitNames.indexOf(recv) === -1)\n      .map(recv => new BoardUnit(recv));\n\n    this.boardUnits = this.boardUnits.concat(missingBoardUnits);\n  }\n\n  text() {\n    this.updateBoardUnits();\n\n    let txt = 'VERSION \"\"\\n\\n\\n';\n    txt += \"NS_ :\" + this._newSymbols();\n    txt += \"\\n\\nBS_:\\n\";\n\n    const boardUnitsText = this.boardUnits.map(bu => bu.text()).join(\" \");\n    txt += \"\\nBU_: \" + boardUnitsText + \"\\n\\n\\n\";\n\n    const frames = [];\n    for (let frame of this.messages.values()) {\n      frames.push(frame);\n    }\n    txt += frames.map(f => f.text()).join(\"\\n\\n\") + \"\\n\\n\";\n\n    const messageTxs = frames\n      .map(f => [f.id, f.transmitters.slice(1)])\n      .filter(([addr, txs]) => txs.length > 0);\n    txt +=\n      messageTxs\n        .map(([addr, txs]) => `BO_TX_BU_ ${addr} : ${txs.join(\",\")};`)\n        .join(\"\\n\") + \"\\n\\n\\n\";\n\n    txt += this.boardUnits\n      .filter(bu => bu.comment !== null)\n      .map(bu => `CM_ BU_ ${bu.name} \"${bu.comment}\";`)\n      .join(\"\\n\");\n\n    txt += frames\n      .filter(f => f.comment !== null)\n      .map(msg => `CM_ BO_ ${msg.address} \"${msg.comment}\";`)\n      .join(\"\\n\");\n\n    const signalsByMsgId = frames\n      .map(f => Object.values(f.signals).map(sig => [f.id, sig]))\n      .reduce((s1, s2) => s1.concat(s2), []);\n\n    txt +=\n      signalsByMsgId\n        .filter(([msgAddr, sig]) => sig.comment !== null)\n        .map(\n          ([msgAddr, sig]) => `CM_ SG_ ${msgAddr} ${sig.name} \"${sig.comment}\";`\n        )\n        .join(\"\\n\") + \"\\n\";\n\n    txt +=\n      signalsByMsgId\n        .filter(([msgAddr, sig]) => sig.valueDescriptions.size > 0)\n        .map(([msgAddr, sig]) => sig.valueDescriptionText(msgAddr))\n        .join(\"\\n\") + \"\\n\";\n\n    txt += this.comments.map(comment => `CM_ \"${comment}\";`).join(\"\\n\");\n\n    return txt.trim() + \"\\n\";\n  }\n\n  getMessageName(msgId) {\n    const msg = this.getMessageFrame(msgId);\n    if (msg && msg.frame) return msg.frame.name;\n    return null;\n  }\n\n  getSignals(msgId) {\n    const msg = this.getMessageFrame(msgId);\n    if (msg) return msg.signals;\n    return {};\n  }\n\n  createFrame(msgId) {\n    const msg = new Frame({\n      name: this.nextNewFrameName(),\n      id: msgId,\n      size: 8\n    });\n\n    this.messages.set(msgId, msg);\n    return msg;\n  }\n\n  setSignals(msgId, signals) {\n    const msg = this.getMessageFrame(msgId);\n    if (msg) {\n      const newMsg = Object.assign(Object.create(msg), msg);\n      newMsg.signals = signals;\n      this.messages.set(msgId, newMsg);\n    } else {\n      const msg = this.createFrame(msgId);\n      msg.signals = signals;\n\n      this.messages.set(msgId, msg);\n      this.updateBoardUnits();\n    }\n  }\n\n  addSignal(msgId, signal) {\n    const msg = this.getMessageFrame(msgId);\n\n    if (msg) {\n      msg.signals[signal.name] = signal;\n      this.updateBoardUnits();\n    }\n  }\n\n  importDbcString(dbcString) {\n    const warnings = [];\n    const messages = new Map();\n    let boardUnits = [];\n    let valueTables = new Map();\n    let id = 0;\n    let followUp = null;\n\n    const lines = dbcString.split(\"\\n\");\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i].trim();\n\n      if (line.length === 0) continue;\n\n      if (followUp != null) {\n        const { type, data } = followUp;\n        line = line.replace(/\" *;/, \"\");\n        let followUpLine = `\\n${line.substr(0, line.length)}`;\n        if (line.indexOf('\"') !== -1) {\n          followUp = null;\n          followUpLine = followUpLine.substr(0, followUpLine.length - 1);\n        }\n        if (type === FOLLOW_UP_SIGNAL_COMMENT) {\n          const signal = data;\n          signal.comment += followUpLine;\n        } else if (type === FOLLOW_UP_MSG_COMMENT) {\n          const msg = data;\n          msg.comment += followUpLine;\n        } else if (type === FOLLOW_UP_BOARD_UNIT_COMMENT) {\n          const boardUnit = data;\n          boardUnit.comment += followUpLine;\n        } else if (type === FOLLOW_UP_DBC_COMMENT) {\n          //          const comment = data;\n          const partialComment = this.comments[this.comments.length - 1];\n          this.comments[this.comments.length - 1] =\n            partialComment + followUpLine;\n        }\n      }\n\n      if (line.indexOf(\"BO_ \") === 0) {\n        let matches = line.match(MSG_RE);\n        if (matches === null) {\n          warnings.push(\n            `failed to parse message definition on line ${i + 1} -- ${line}`\n          );\n          continue;\n        }\n        let [idString, name, size, transmitter] = matches.slice(1);\n        id = parseInt(idString, 0); // 0 radix parses hex or dec\n        size = parseInt(size, 10);\n        const frame = new Frame({\n          name,\n          id,\n          size,\n          transmitters: [transmitter]\n        });\n        messages.set(id, frame);\n      } else if (line.indexOf(\"SG_\") === 0) {\n        let matches = line.match(SIGNAL_RE);\n\n        if (matches === null) {\n          matches = line.match(MP_SIGNAL_RE);\n          if (matches === null) {\n            warnings.push(\n              `failed to parse signal definition on line ${i + 1} -- ${line}`\n            );\n            continue;\n          }\n          // for now, ignore multiplex which is matches[1]\n          matches = matches[1] + matches.slice(3);\n        } else {\n          matches = matches.slice(1);\n        }\n\n        let [\n          name,\n          startBit,\n          size,\n          isLittleEndian,\n          isSigned,\n          factor,\n          offset,\n          min,\n          max,\n          unit,\n          receiverStr\n        ] = matches;\n        startBit = parseInt(startBit, 10);\n        size = parseInt(size, 10);\n        isLittleEndian = parseInt(isLittleEndian, 10) === 1;\n        isSigned = isSigned === \"-\";\n        factor = floatOrInt(factor);\n        offset = floatOrInt(offset);\n        min = floatOrInt(min);\n        max = floatOrInt(max);\n        const receiver = receiverStr.split(\",\").map(s => s.trim());\n\n        const signalProperties = {\n          name,\n          startBit,\n          size,\n          isLittleEndian,\n          isSigned,\n          factor,\n          offset,\n          unit,\n          min,\n          max,\n          receiver\n        };\n        const signal = new Signal(signalProperties);\n\n        if (messages.get(id) !== undefined) {\n          messages.get(id).signals[name] = signal;\n        } else {\n          CloudLog.warn(\n            \"importDbcString: could not add signal: \" +\n              name +\n              \" due to missing message: \" +\n              id\n          );\n        }\n      } else if (line.indexOf(\"VAL_ \") === 0) {\n        let matches = line.match(VAL_RE);\n\n        if (matches !== null) {\n          let [messageId, signalName, vals] = matches.slice(1);\n          vals = vals\n            .split('\"')\n            .map(s => s.trim())\n            .filter(s => s.length > 0);\n\n          messageId = parseInt(messageId, 10);\n          const msg = messages.get(messageId);\n          const signal = msg.signals[signalName];\n          if (signal === undefined) {\n            warnings.push(\n              `could not find signal for value description on line ${i +\n                1} -- ${line}`\n            );\n            continue;\n          }\n          for (let i = 0; i < vals.length; i += 2) {\n            const value = vals[i].trim(),\n              description = vals[i + 1].trim();\n            signal.valueDescriptions.set(value, description);\n          }\n        } else {\n          warnings.push(\n            `failed to parse value description on line ${i + 1} -- ${line}`\n          );\n        }\n      } else if (line.indexOf(\"VAL_TABLE_ \") === 0) {\n        let matches = line.match(VAL_TABLE_RE);\n\n        if (matches !== null) {\n          const table = new Map();\n          let [tableName, items] = matches.slice(1);\n          items = items\n            .split('\"')\n            .map(s => s.trim())\n            .filter(s => s.length > 0);\n\n          for (let i = 0; i < items.length; i += 2) {\n            const key = items[i],\n              value = items[i + 1];\n            table.set(key, value);\n          }\n          valueTables.set(tableName, table);\n        } else {\n          warnings.push(\n            `failed to parse value table on line ${i + 1} -- ${line}`\n          );\n        }\n      } else if (line.indexOf(\"BO_TX_BU_ \") === 0) {\n        let matches = line.match(MSG_TRANSMITTER_RE);\n\n        if (matches !== null) {\n          let [messageId, transmitter] = matches.slice(1);\n          messageId = parseInt(messageId, 10);\n\n          const msg = messages.get(messageId);\n          msg.transmitters.push(transmitter);\n          messages.set(messageId, msg);\n        } else {\n          warnings.push(\n            `failed to parse message transmitter definition on line ${i +\n              1} -- ${line}`\n          );\n        }\n      } else if (line.indexOf(\"CM_ SG_ \") === 0) {\n        let matches = line.match(SIGNAL_COMMENT_RE);\n        let hasFollowUp = false;\n        if (matches === null) {\n          matches = line.match(SIGNAL_COMMENT_MULTI_LINE_RE);\n          hasFollowUp = true;\n        }\n        if (matches === null) {\n          warnings.push(\n            `failed to parse signal comment on line ${i + 1} -- ${line}`\n          );\n          continue;\n        }\n\n        let [messageId, signalName, comment] = matches.slice(1);\n\n        messageId = parseInt(messageId, 10);\n        const msg = messages.get(messageId);\n        if (msg === undefined) {\n          warnings.push(`failed to parse signal comment on line ${i +\n            1} -- ${line}:\n                                    message id ${messageId} does not exist prior to this line`);\n          continue;\n        }\n        const signal = msg.signals[signalName];\n        if (signal === undefined) {\n          warnings.push(\n            `failed to parse signal comment on line ${i + 1} -- ${line}`\n          );\n          continue;\n        } else {\n          signal.comment = comment;\n          messages.set(messageId, msg);\n        }\n\n        if (hasFollowUp) {\n          followUp = { type: FOLLOW_UP_SIGNAL_COMMENT, data: signal };\n        }\n      } else if (line.indexOf(\"CM_ BO_ \") === 0) {\n        let matches = line.match(MESSAGE_COMMENT_RE);\n        let hasFollowUp = false;\n        if (matches === null) {\n          matches = line.match(MESSAGE_COMMENT_MULTI_LINE_RE);\n          hasFollowUp = true;\n          if (matches === null) {\n            warnings.push(\n              `failed to message comment on line ${i + 1} -- ${line}`\n            );\n            continue;\n          }\n        }\n\n        let [messageId, comment] = matches.slice(1);\n        messageId = parseInt(messageId, 10);\n        const msg = messages.get(messageId);\n        msg.comment = comment;\n\n        if (hasFollowUp) {\n          followUp = { type: FOLLOW_UP_MSG_COMMENT, data: msg };\n        }\n      } else if (line.indexOf(\"BU_: \") === 0) {\n        let matches = line.match(BOARD_UNIT_RE);\n\n        if (matches !== null) {\n          const [boardUnitNameStr] = matches.slice(1);\n          const newBoardUnits = boardUnitNameStr\n            .split(\" \")\n            .map(s => s.trim())\n            .filter(s => s.length > 0)\n            .map(name => new BoardUnit(name));\n\n          boardUnits = boardUnits.concat(newBoardUnits);\n        } else {\n          warnings.push(\n            `failed to parse board unit definition on line ${i + 1} -- ${line}`\n          );\n          continue;\n        }\n      } else if (line.indexOf(\"CM_ BU_ \") === 0) {\n        let matches = line.match(BOARD_UNIT_COMMENT_RE);\n        let hasFollowUp = false;\n        if (matches === null) {\n          matches = line.match(BOARD_UNIT_COMMENT_MULTI_LINE_RE);\n          hasFollowUp = true;\n          if (matches === null) {\n            warnings.push(\n              `failed to parse board unit comment on line ${i + 1} -- ${line}`\n            );\n            continue;\n          }\n        }\n\n        let [boardUnitName, comment] = matches.slice(1);\n        let boardUnit = boardUnits.find(bu => bu.name === boardUnitName);\n        if (boardUnit) {\n          boardUnit.comment = comment;\n        }\n\n        if (hasFollowUp) {\n          followUp = { type: FOLLOW_UP_BOARD_UNIT_COMMENT, data: boardUnit };\n        }\n      } else if (line.indexOf(\"CM_ \") === 0) {\n        let matches = line.match(DBC_COMMENT_RE);\n        let hasFollowUp = false;\n        if (matches === null) {\n          matches = line.match(DBC_COMMENT_MULTI_LINE_RE);\n          if (matches === null) {\n            warnings.push(\n              `failed to parse dbc comment on line ${i + 1} -- ${line}`\n            );\n            continue;\n          } else {\n            hasFollowUp = true;\n          }\n        }\n\n        let [comment] = matches.slice(1);\n        this.comments.push(comment);\n        if (hasFollowUp) {\n          followUp = { type: FOLLOW_UP_DBC_COMMENT, data: comment };\n        }\n      }\n    }\n\n    // Disabled b/c live mode frequently calls this function\n    // and executes way too many network requests\n    if (warnings.length > 0) {\n      // warnings.forEach((warning) => CloudLog.warn('importDbcString: ' + warning));\n      // warnings.forEach((warning) => console.log('importDbcString: ' + warning));\n    }\n\n    this.messages = messages;\n    this.boardUnits = boardUnits;\n    this.valueTables = valueTables;\n  }\n\n  valueForInt64Signal(signalSpec, hexData) {\n    const blen = hexData.length * 4;\n    let value, startBit, dataBitPos;\n\n    if (signalSpec.isLittleEndian) {\n      value = UINT64(swapOrder(hexData, 16, 2), 16);\n      startBit = signalSpec.startBit;\n      dataBitPos = UINT64(startBit);\n    } else {\n      // big endian\n      value = UINT64(hexData, 16);\n\n      startBit = DbcUtils.bigEndianBitIndex(signalSpec.startBit);\n      dataBitPos = UINT64(blen - (startBit + signalSpec.size));\n    }\n    if (dataBitPos < 0) {\n      return null;\n    }\n\n    let rightHandAnd = UINT64(Math.pow(2, signalSpec.size) - 1);\n    let ival = value\n      .shiftr(dataBitPos)\n      .and(rightHandAnd)\n      .toNumber();\n\n    if (signalSpec.isSigned && ival & Math.pow(2, signalSpec.size - 1)) {\n      ival -= Math.pow(2, signalSpec.size);\n    }\n    ival = ival * signalSpec.factor + signalSpec.offset;\n    return ival;\n  }\n\n  valueForInt32Signal(signalSpec, buf) {\n    var startBit;\n    if (signalSpec.isLittleEndian) {\n      startBit = 64 - signalSpec.startBit - signalSpec.size;\n    } else {\n      var bitPos = (-signalSpec.startBit - 1) % 8;\n      if (bitPos < 0) {\n        bitPos += 8; // mimic python modulo behavior\n      }\n\n      startBit = Math.floor(signalSpec.startBit / 8) * 8 + bitPos;\n    }\n\n    var shiftAmount, signalValue;\n    let byteOffset = Math.min(4, Math.floor(signalSpec.startBit / 8));\n    if (signalSpec.isLittleEndian) {\n      signalValue = buf.readUInt32LE(byteOffset);\n      shiftAmount = signalSpec.startBit - 8 * byteOffset;\n    } else {\n      signalValue = buf.readUInt32BE(byteOffset);\n      shiftAmount = 32 - (startBit - 8 * byteOffset + signalSpec.size);\n    }\n\n    signalValue = (signalValue >>> shiftAmount) & ((1 << signalSpec.size) - 1);\n    if (signalSpec.isSigned && signalValue >>> (signalSpec.size - 1)) {\n      signalValue -= 1 << signalSpec.size;\n    }\n\n    return signalValue * signalSpec.factor + signalSpec.offset;\n  }\n\n  getSignalValues(messageId, data) {\n    if (!this.messages.has(messageId) && !LogSignals.isLogAddress(messageId)) {\n      return {};\n    }\n    const frame = this.getMessageFrame(messageId);\n\n    let buffer = Buffer.from(data);\n    let paddedBuffer = buffer;\n    if (buffer.length !== 8) {\n      // pad data it's 64 bits long\n      const paddedDataHex = rightPad(buffer.toString(\"hex\"), 16, \"0\");\n      paddedBuffer = Buffer.from(paddedDataHex, \"hex\");\n    }\n    const hexData = paddedBuffer.toString(\"hex\");\n\n    const signalValuesByName = {};\n    Object.values(frame.signals).forEach(signalSpec => {\n      let value;\n      if (signalSpec.size > 32) {\n        value = this.valueForInt64Signal(signalSpec, hexData);\n      } else {\n        value = this.valueForInt32Signal(signalSpec, paddedBuffer);\n      }\n      signalValuesByName[signalSpec.name] = value;\n    });\n\n    return signalValuesByName;\n  }\n\n  getChffrMetricMappings() {\n    const metricComment = this.comments.find(\n      comment => comment.indexOf(\"CHFFR_METRIC\") === 0\n    );\n    if (!metricComment) {\n      return null;\n    }\n\n    return metricComment\n      .split(\";\")\n      .map(metric => metric.trim().split(\" \"))\n      .reduce(\n        (metrics, [_, messageId, signalName, metricName, factor, offset]) => {\n          metrics[metricName] = {\n            messageId: parseInt(messageId, 10),\n            signalName,\n            factor: parseFloat(factor),\n            offset: parseFloat(offset)\n          };\n          return metrics;\n        },\n        {}\n      );\n  }\n\n  _newSymbols() {\n    return `\n    NS_DESC_\n    CM_\n    BA_DEF_\n    BA_\n    VAL_\n    CAT_DEF_\n    CAT_\n    FILTER\n    BA_DEF_DEF_\n    EV_DATA_\n    ENVVAR_DATA_\n    SGTYPE_\n    SGTYPE_VAL_\n    BA_DEF_SGTYPE_\n    BA_SGTYPE_\n    SIG_TYPE_REF_\n    VAL_TABLE_\n    SIG_GROUP_\n    SIG_VALTYPE_\n    SIGTYPE_VALTYPE_\n    BO_TX_BU_\n    BA_DEF_REL_\n    BA_REL_\n    BA_DEF_DEF_REL_\n    BU_SG_REL_\n    BU_EV_REL_\n    BU_BO_REL_\n    SG_MUL_VAL_`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/can/dbc.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 7\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 8\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 9\n// module chunks = 0","// Coding standard for this project defined @ https://github.com/MatthewSH/standards/blob/master/JavaScript.md\n'use strict';\n\nexports = module.exports = function rightPad (_string, _length, _char) {\n  if (typeof _string !== 'string') {\n    throw new Error('The string parameter must be a string.');\n  }\n  if (_string.length < 1) {\n    throw new Error('The string parameter must be 1 character or longer.');\n  }\n  if (typeof _length !== 'number') {\n    throw new Error('The length parameter must be a number.');\n  }\n  if(typeof _char !== 'string' && _char) {\n    throw new Error('The character parameter must be a string.');\n  }\n\n  var i = -1;\n  _length = _length - _string.length;\n  if (!_char && _char !== 0) {\n    _char = ' ';\n  }\n  while (++i < _length) {\n    _string += _char;\n  }\n\n  return _string;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/right-pad/rightpad.js\n// module id = 10\n// module chunks = 0","import LogEntries from \"./LogEntries\";\nimport { LOGENTRIES_TOKEN } from \"../config\";\n\nclass CloudLog {\n  constructor() {\n    LogEntries.init({\n      token: LOGENTRIES_TOKEN,\n      no_format: true,\n      catchall: false\n    });\n    this.context = {};\n  }\n\n  bind(obj) {\n    this.context.update(obj);\n  }\n\n  emit(message, level = \"log\") {\n    if (typeof global.__JEST__ !== \"undefined\") {\n      // Don't log in testing environment\n      return;\n    }\n\n    const entry = {\n      ctx: this.context,\n      created: new Date().getTime() / 1000,\n      msg: message,\n      src: \"JSCloudLog\"\n    };\n\n    if (level === \"log\") {\n      LogEntries.log(entry);\n    } else if (level === \"warn\") {\n      LogEntries.warn(entry);\n    } else if (level === \"error\") {\n      LogEntries.error(entry);\n    }\n  }\n\n  log(message) {\n    this.emit(message);\n  }\n\n  warn(message) {\n    this.emit(message, \"warn\");\n  }\n\n  error(message) {\n    this.emit(message, \"error\");\n  }\n}\n\nexport default new CloudLog();\n\n\n\n// WEBPACK FOOTER //\n// ./src/logging/CloudLog.js","// Vendored from https://github.com/rapid7/le_js, which is broken with webpack.\n/* eslint-disable */\n\nif (typeof window === \"undefined\") {\n  // eslint-disable-line no-use-before-define\n  var window = self;\n}\nvar _indexOf = function(array, obj) {\n  for (var i = 0; i < array.length; i++) {\n    if (obj === array[i]) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n// Obtain a browser-specific XHR object\nvar _getAjaxObject = function() {\n  if (typeof XDomainRequest !== \"undefined\") {\n    // We're using IE8/9\n    return new XDomainRequest();\n  }\n  return new XMLHttpRequest();\n};\n\n/**\n * A single log event stream.\n * @constructor\n * @param {Object} options\n */\nfunction LogStream(options) {\n  /**\n   * @const\n   * @type {string} */\n  var _traceCode = options.trace\n    ? (Math.random() + Math.PI).toString(36).substring(2, 10)\n    : null;\n  /** @type {string} */\n  var _pageInfo = options.page_info;\n  /** @type {string} */\n  var _token = options.token;\n  /** @type {boolean} */\n  var _print = options.print;\n  /** @type {boolean} */\n  var _noFormat = options.no_format;\n  /** @type {boolean} */\n  var _SSL = (function() {\n    if (typeof XDomainRequest === \"undefined\") {\n      return options.ssl;\n    }\n    // If we're relying on XDomainRequest, we\n    // must adhere to the page's encryption scheme.\n    return window.location.protocol === \"https:\" ? true : false;\n  })();\n  /** @type {string} */\n  var _endpoint;\n  if (window.LEENDPOINT) {\n    _endpoint = window.LEENDPOINT;\n  } else if (_noFormat) {\n    _endpoint = \"webhook.logentries.com/noformat\";\n  } else {\n    _endpoint = \"js.logentries.com/v1\";\n  }\n  _endpoint = (_SSL ? \"https://\" : \"http://\") + _endpoint + \"/logs/\" + _token;\n\n  /**\n   * Flag to prevent further invocations on network err\n   ** @type {boolean} */\n  var _shouldCall = true;\n  /** @type {Array.<string>} */\n  var _backlog = [];\n  /** @type {boolean} */\n  var _active = false;\n  /** @type {boolean} */\n  var _sentPageInfo = false;\n\n  var _apiCall = function(token, data) {\n    _active = true;\n\n    var request = _getAjaxObject();\n\n    if (_shouldCall) {\n      if (request.constructor === XMLHttpRequest) {\n        // Currently we don't support fine-grained error\n        // handling in older versions of IE\n        request.onreadystatechange = function() {\n          if (request.readyState === 4) {\n            // Handle any errors\n            if (request.status >= 400) {\n              console.error(\"Couldn't submit events.\");\n              if (request.status === 410) {\n                // This API version has been phased out\n                console.warn(\"This version of le_js is no longer supported!\");\n              }\n            } else {\n              if (request.status === 301) {\n                // Server issued a deprecation warning\n                console.warn(\n                  \"This version of le_js is deprecated! Consider upgrading.\"\n                );\n              }\n              if (_backlog.length > 0) {\n                // Submit the next event in the backlog\n                _apiCall(token, _backlog.shift());\n              } else {\n                _active = false;\n              }\n            }\n          }\n        };\n      } else {\n        request.onload = function() {\n          if (_backlog.length > 0) {\n            // Submit the next event in the backlog\n            _apiCall(token, _backlog.shift());\n          } else {\n            _active = false;\n          }\n        };\n      }\n\n      request.open(\"POST\", _endpoint, true);\n      if (request.constructor === XMLHttpRequest) {\n        request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        request.setRequestHeader(\"Content-type\", \"application/json\");\n      }\n\n      if (request.overrideMimeType) {\n        request.overrideMimeType(\"text\");\n      }\n\n      request.send(data);\n    }\n  };\n\n  var _getEvent = function() {\n    var raw = null;\n    var args = Array.prototype.slice.call(arguments);\n    if (args.length === 0) {\n      throw new Error(\"No arguments!\");\n    } else if (args.length === 1) {\n      raw = args[0];\n    } else {\n      // Handle a variadic overload,\n      // e.g. _rawLog(\"some text \", x, \" ...\", 1);\n      raw = args;\n    }\n    return raw;\n  };\n\n  var _agentInfo = function() {\n    var nav = window.navigator || { doNotTrack: undefined };\n    var screen = window.screen || {};\n    var location = window.location || {};\n\n    return {\n      url: location.pathname,\n      referrer: document.referrer,\n      screen: {\n        width: screen.width,\n        height: screen.height\n      },\n      window: {\n        width: window.innerWidth,\n        height: window.innerHeight\n      },\n      browser: {\n        name: nav.appName,\n        version: nav.appVersion,\n        cookie_enabled: nav.cookieEnabled,\n        do_not_track: nav.doNotTrack\n      },\n      platform: nav.platform\n    };\n  };\n\n  // Single arg stops the compiler arity warning\n  var _rawLog = function(msg) {\n    var event = _getEvent.apply(this, arguments);\n\n    var data = { event: event };\n\n    // Add agent info if required\n    if (_pageInfo !== \"never\") {\n      if (!_sentPageInfo || _pageInfo === \"per-entry\") {\n        _sentPageInfo = true;\n        if (\n          typeof event.screen === \"undefined\" &&\n          typeof event.browser === \"undefined\"\n        )\n          _rawLog(_agentInfo())\n            .level(\"PAGE\")\n            .send();\n      }\n    }\n\n    if (_traceCode) {\n      data.trace = _traceCode;\n    }\n\n    return {\n      level: function(l) {\n        // Don't log PAGE events to console\n        // PAGE events are generated for the agentInfo function\n        if (_print && typeof console !== \"undefined\" && l !== \"PAGE\") {\n          var serialized = null;\n          if (typeof XDomainRequest !== \"undefined\") {\n            // We're using IE8/9\n            serialized = data.trace + \" \" + data.event;\n          }\n          try {\n            console[l.toLowerCase()].call(console, serialized || data);\n          } catch (ex) {\n            // IE compat fix\n            console.log(serialized || data);\n          }\n        }\n        data.level = l;\n\n        return {\n          send: function() {\n            var cache = [];\n            var serialized = JSON.stringify(data, function(key, value) {\n              if (typeof value === \"undefined\") {\n                return \"undefined\";\n              } else if (typeof value === \"object\" && value !== null) {\n                if (_indexOf(cache, value) !== -1) {\n                  // We've seen this object before;\n                  // return a placeholder instead to prevent\n                  // cycles\n                  return \"<?>\";\n                }\n                cache.push(value);\n              }\n              return value;\n            });\n\n            if (_active) {\n              _backlog.push(serialized);\n            } else {\n              _apiCall(_token, serialized);\n            }\n          }\n        };\n      }\n    };\n  };\n\n  if (options.catchall) {\n    var oldHandler = window.onerror;\n    var newHandler = function(msg, url, line) {\n      _rawLog({ error: msg, line: line, location: url })\n        .level(\"ERROR\")\n        .send();\n      if (oldHandler) {\n        return oldHandler(msg, url, line);\n      } else {\n        return false;\n      }\n    };\n    window.onerror = newHandler;\n  }\n\n  /** @expose */\n  this.log = _rawLog;\n}\n\n/**\n * A single log object\n * @constructor\n * @param {Object} options\n */\nfunction Logger(options) {\n  var logger;\n\n  // Default values\n  var dict = {\n    ssl: true,\n    catchall: false,\n    trace: true,\n    page_info: \"never\",\n    print: false,\n    endpoint: null,\n    token: null\n  };\n\n  if (typeof options === \"object\") for (var k in options) dict[k] = options[k];\n  else throw new Error(\"Invalid parameters for createLogStream()\");\n\n  if (dict.token === null) {\n    throw new Error(\"Token not present.\");\n  } else {\n    logger = new LogStream(dict);\n  }\n\n  var _log = function(msg) {\n    if (logger) {\n      return logger.log.apply(this, arguments);\n    } else throw new Error(\"You must call LE.init(...) first.\");\n  };\n\n  // The public interface\n  return {\n    log: function() {\n      _log\n        .apply(this, arguments)\n        .level(\"LOG\")\n        .send();\n    },\n    warn: function() {\n      _log\n        .apply(this, arguments)\n        .level(\"WARN\")\n        .send();\n    },\n    error: function() {\n      _log\n        .apply(this, arguments)\n        .level(\"ERROR\")\n        .send();\n    },\n    info: function() {\n      _log\n        .apply(this, arguments)\n        .level(\"INFO\")\n        .send();\n    }\n  };\n}\n\n// Array of Logger elements\nvar loggers = {};\n\nvar _getLogger = function(name) {\n  if (!loggers.hasOwnProperty(name))\n    throw new Error(\"Invalid name for logStream\");\n\n  return loggers[name];\n};\n\nvar _createLogStream = function(options) {\n  if (typeof options.name !== \"string\") throw new Error(\"Name not present.\");\n  else if (loggers.hasOwnProperty(options.name))\n    throw new Error(\"A logger with that name already exists!\");\n  loggers[options.name] = new Logger(options);\n\n  return true;\n};\n\nvar _deprecatedInit = function(options) {\n  var dict = {\n    name: \"default\"\n  };\n\n  if (typeof options === \"object\") for (var k in options) dict[k] = options[k];\n  else if (typeof options === \"string\") dict.token = options;\n  else throw new Error(\"Invalid parameters for init()\");\n\n  return _createLogStream(dict);\n};\n\nvar _destroyLogStream = function(name) {\n  if (typeof name === \"undefined\") {\n    name = \"default\";\n  }\n\n  delete loggers[name];\n};\n\n// The public interface\nexport default {\n  init: _deprecatedInit,\n  createLogStream: _createLogStream,\n  to: _getLogger,\n  destroy: _destroyLogStream,\n  log: function() {\n    for (var k in loggers) loggers[k].log.apply(this, arguments);\n  },\n  warn: function() {\n    for (var k in loggers) loggers[k].warn.apply(this, arguments);\n  },\n  error: function() {\n    for (var k in loggers) loggers[k].error.apply(this, arguments);\n  },\n  info: function() {\n    for (var k in loggers) loggers[k].info.apply(this, arguments);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/logging/LogEntries.js","import { getUrlParameter } from \"./utils/url\";\n\nconst ENV = process.env.NODE_ENV === \"production\" ? \"prod\" : \"debug\";\n\nconst ENV_GITHUB_CLIENT_ID = {\n  debug: \"f1e42d14f45491f9ca34\",\n  prod: \"4b43250e7499a97d62a5\"\n};\nexport const GITHUB_CLIENT_ID = ENV_GITHUB_CLIENT_ID[ENV];\n\nconst ENV_GITHUB_REDIRECT_URL = {\n  debug: \"http://127.0.0.1:1235/callback\",\n  prod: \"https://api.comma.ai/cabana/ghcallback\"\n};\nexport const GITHUB_REDIRECT_URL = ENV_GITHUB_REDIRECT_URL[ENV];\nexport const GITHUB_AUTH_TOKEN_KEY = \"gh_access_token\";\nexport const OPENDBC_SOURCE_REPO = \"commaai/opendbc\";\n\nexport const USE_UNLOGGER =\n  typeof window !== \"undefined\" && getUrlParameter(\"unlogger\") !== null;\nexport const UNLOGGER_HOST = \"http://localhost:8080/unlogger\";\n\nexport const LOGENTRIES_TOKEN = \"4bc98019-8277-4fe0-867c-ed21ea843cc5\";\n\nexport const PART_SEGMENT_LENGTH = 3;\n\nexport const CAN_GRAPH_MAX_POINTS = 5000;\n\nexport const STREAMING_WINDOW = 60;\n\nconst ENV_EXPLORER_URL = {\n  debug: \"http://127.0.0.1:3000/\",\n  prod: \"https://my.comma.ai/\"\n};\nexport const EXPLORER_URL = ENV_EXPLORER_URL[ENV];\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","/* eslint-disable no-restricted-globals*/\nexport function objToQuery(obj) {\n  return Object.keys(obj)\n    .map(k => k + \"=\" + encodeURIComponent(decodeURIComponent(obj[k])))\n    .join(\"&\");\n}\n\nexport function getUrlParameter(name) {\n  var location = window.location;\n  name = name.replace(/[[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n  var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n  var results = regex.exec(location.search);\n\n  return results === null\n    ? null\n    : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n\nexport function modifyQueryParameters({ add, remove }) {\n  var regex = new RegExp(\"[\\\\?&]([^&#]+)=([^&#]*)\");\n  var results = regex.exec(location.search);\n\n  let params = {};\n  if (results != null) {\n    for (let i = 1; i < results.length - 1; i += 2) {\n      let key = results[i],\n        value = results[i + 1];\n      params[key] = value;\n    }\n    for (let key in params) {\n      if (remove.indexOf(key) !== -1) {\n        delete params[key];\n      }\n    }\n    params = { ...params, ...add };\n  } else {\n    params = add;\n  }\n\n  return location.origin + location.pathname + \"?\" + objToQuery(params);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/url.js","export default class BoardUnit {\n  constructor(name) {\n    this.name = name;\n    this.attributes = {};\n    this.comment = null;\n  }\n\n  text() {\n    return this.name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/can/BoardUnit.js","import Frame from \"./frame\";\nimport Signal from \"./signal\";\n\nexport const wheelSpeeds = {\n  FrontLeftWheel: shortSignal({\n    index: 0,\n    factor: 0.001\n  }),\n  FrontRightWheel: shortSignal({\n    index: 1,\n    factor: 0.001\n  }),\n  RearLeftWheel: shortSignal({\n    index: 2,\n    factor: 0.001\n  }),\n  RearRightWheel: shortSignal({\n    index: 3,\n    factor: 0.001\n  })\n};\n\nexport const ego = {\n  VEgo: shortSignal({\n    index: 0,\n    factor: 0.001\n  }),\n  AEgo: shortSignal({\n    index: 1,\n    factor: 0.001\n  }),\n  VEgoRaw: shortSignal({\n    index: 2,\n    factor: 0.001\n  }),\n  YawRate: shortSignal({\n    index: 3,\n    factor: 0.001\n  })\n};\n\nexport const controls = {\n  SteeringAngle: longSignal({\n    index: 0,\n    factor: 0.001\n  }),\n  Brake: shortSignal({\n    index: 2,\n    factor: 0.001\n  }),\n  Gas: shortSignal({\n    index: 3,\n    factor: 0.001\n  })\n};\n\nexport const flags = {\n  LeftBlinker: boolSignal({\n    index: 0\n  }),\n  RightBlinker: boolSignal({\n    index: 1\n  }),\n  GenericToggle: boolSignal({\n    index: 2\n  }),\n  DoorOpen: boolSignal({\n    index: 3\n  }),\n  SeatbeltUnlatched: boolSignal({\n    index: 4\n  }),\n  GasPressed: boolSignal({\n    index: 5\n  }),\n  BrakeLights: boolSignal({\n    index: 6\n  }),\n  SteeringPressed: boolSignal({\n    index: 7\n  }),\n  Standstill: boolSignal({\n    index: 8\n  }),\n  \"CruiseState.Enabled\": boolSignal({\n    index: 9\n  }),\n  \"CruiseState.Available\": boolSignal({\n    index: 10\n  }),\n  \"CruiseState.Standstill\": boolSignal({\n    index: 11\n  }),\n  GearShifter: {\n    startBit: 15,\n    size: 4,\n    unsigned: true\n  },\n  \"CruiseState.Speed\": charSignal({\n    index: 2\n  })\n};\n\nexport const ubloxGnss = {\n  RcvTow: longSignal({\n    index: 0\n  }),\n  GpsWeek: shortSignal({\n    index: 2\n  }),\n  LeapSeconds: {\n    startBit: 55,\n    size: 8\n  },\n  NumMeas: {\n    startBit: 63,\n    size: 8\n  }\n};\n\nexport const health = {\n  Voltage: shortSignal({\n    index: 0\n  }),\n  Current: charSignal({\n    index: 2\n  }),\n  Started: boolSignal({\n    index: 24\n  }),\n  ControlsAllowed: boolSignal({\n    index: 25\n  }),\n  GasInterceptorDetected: boolSignal({\n    index: 26\n  }),\n  StartedSignalDetected: boolSignal({\n    index: 27\n  })\n};\n\nexport const thermalCPU = {\n  Cpu0: shortSignal({\n    index: 0,\n    unsigned: true\n  }),\n  Cpu1: shortSignal({\n    index: 1,\n    unsigned: true\n  }),\n  Cpu2: shortSignal({\n    index: 2,\n    unsigned: true\n  }),\n  Cpu3: shortSignal({\n    index: 3,\n    unsigned: true\n  })\n};\n\nexport const thermalData = {\n  Mem: shortSignal({\n    index: 0,\n    unsigned: true\n  }),\n  Gpu: shortSignal({\n    index: 1,\n    unsigned: true\n  }),\n  FanSpeed: shortSignal({\n    index: 2,\n    unsigned: true\n  }),\n  BatteryPercent: charSignal({\n    index: 6,\n    unsigned: true\n  }),\n  UsbOnline: boolSignal({\n    index: 56\n  }),\n  Started: boolSignal({\n    index: 57\n  })\n};\n\nexport const thermalFreeSpace = {\n  FreeSpace: longSignal({\n    index: 0,\n    unsigned: true,\n    factor: 0.000000001\n  })\n};\n\nexport const signalMap = {\n  \"CarState:WheelSpeeds\": wheelSpeeds,\n  \"CarState:Ego\": ego,\n  \"CarState:Controls\": controls,\n  \"CarState:Flags\": flags,\n  \"UbloxGnss:MeasurementReport\": ubloxGnss,\n  \"Health:Data\": health,\n  \"Thermal:CPU\": thermalCPU,\n  \"Thermal:Data\": thermalData,\n  \"Thermal:FreeSpace\": thermalFreeSpace\n};\n\nconst ADDRESS_LIST = [];\n\nObject.keys(signalMap).forEach(function(name) {\n  Object.keys(signalMap[name]).forEach(function(signal) {\n    signalMap[name][signal] = createSignalEntry({\n      name: signal,\n      ...signalMap[name][signal]\n    });\n  });\n  addressForName(name);\n});\n\nfunction createSignalEntry(options) {\n  return new Signal({\n    name: options.name,\n    startBit: options.startBit,\n    size: options.size,\n    isLittleEndian: false,\n    isSigned: !options.unsigned,\n    factor: options.factor || 1,\n    offset: options.offset || 0,\n    unit: options.unit || \"\"\n  });\n}\n\nfunction longSignal(options) {\n  return {\n    ...options,\n    size: 32,\n    startBit: options.index * 32 + 7\n  };\n}\n\nfunction shortSignal(options) {\n  return {\n    ...options,\n    size: 16,\n    startBit: options.index * 16 + 7\n  };\n}\n\nfunction charSignal(options) {\n  return {\n    ...options,\n    size: 8,\n    startBit: options.index * 8 + 7\n  };\n}\n\nfunction boolSignal(options) {\n  return {\n    ...options,\n    size: 1,\n    startBit: options.index,\n    unsigned: true\n  };\n}\n\nexport function addressForName(name) {\n  var i = ADDRESS_LIST.indexOf(name);\n  if (i === -1) {\n    ADDRESS_LIST.push(name);\n    return ADDRESS_LIST.indexOf(name) + 0x1000;\n  }\n  return i + 0x1000;\n}\n\nexport function nameForAddress(address) {\n  if (address >= 0x1000) {\n    return ADDRESS_LIST[address - 0x1000];\n  }\n  return null;\n}\n\nexport function isLogAddress(address) {\n  return !!nameForAddress(address);\n}\n\nexport function frameForAddress(address) {\n  let name = nameForAddress(address);\n  return new Frame({\n    id: name,\n    name: name,\n    size: 8,\n    signals: signalMap[name]\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/can/logSignals.js","exports.UINT32 = require('./lib/uint32')\nexports.UINT64 = require('./lib/uint64')\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cuint/index.js\n// module id = 17\n// module chunks = 0","/**\n\tC-like unsigned 32 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t36: UINT32( Math.pow(36, 5) )\n\t,\t16: UINT32( Math.pow(16, 7) )\n\t,\t10: UINT32( Math.pow(10, 9) )\n\t,\t2:  UINT32( Math.pow(2, 30) )\n\t}\n\tvar radixCache = {\n\t\t36: UINT32(36)\n\t,\t16: UINT32(16)\n\t,\t10: UINT32(10)\n\t,\t2:  UINT32(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 32 bits integer\n\t * @constructor\n\t * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n\t * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT32 (l, h) {\n\t\tif ( !(this instanceof UINT32) )\n\t\t\treturn new UINT32(l, h)\n\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tthis.remainder = null\n\t\tif (typeof h == 'undefined')\n\t\t\treturn fromNumber.call(this, l)\n\n\t\tif (typeof l == 'string')\n\t\t\treturn fromString.call(this, l, h)\n\n\t\tfromBits.call(this, l, h)\n\t}\n\n\t/**\n\t * Set the current _UINT32_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} low bits\n\t * @param {Number} high bits\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (l, h) {\n\t\tthis._low = l | 0\n\t\tthis._high = h | 0\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT32_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT32_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tvar value = parseInt(s, radix || 10)\n\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT32_ to a number\n\t * @method toNumber\n\t * @return {Number} the converted UINT32\n\t */\n\tUINT32.prototype.toNumber = function () {\n\t\treturn (this._high * 65536) + this._low\n\t}\n\n\t/**\n\t * Convert this _UINT32_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT32\n\t */\n\tUINT32.prototype.toString = function (radix) {\n\t\treturn this.toNumber().toString(radix || 10)\n\t}\n\n\t/**\n\t * Add two _UINT32_. The current _UINT32_ stores the result\n\t * @method add\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.add = function (other) {\n\t\tvar a00 = this._low + other._low\n\t\tvar a16 = a00 >>> 16\n\n\t\ta16 += this._high + other._high\n\n\t\tthis._low = a00 & 0xFFFF\n\t\tthis._high = a16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT32_. The current _UINT32_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.subtract = function (other) {\n\t\t//TODO inline\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT32_. The current _UINT32_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16\n\t\t\tb = b00 + b16\n\t\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\t\ta16b16 overflows the 32bits\n\t\t */\n\t\tvar a16 = this._high\n\t\tvar a00 = this._low\n\t\tvar b16 = other._high\n\t\tvar b00 = other._low\n\n/* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n\t\t// this == 0 or other == 1: nothing to do\n\t\tif ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n\n\t\t// other == 0 or this == 1: this = other\n\t\tif ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n\t\t\tthis._low = other._low\n\t\t\tthis._high = other._high\n\t\t\treturn this\n\t\t}\n*/\n\n\t\tvar c16, c00\n\t\tc00 = a00 * b00\n\t\tc16 = c00 >>> 16\n\n\t\tc16 += a16 * b00\n\t\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\t\tc16 += a00 * b16\n\n\t\tthis._low = c00 & 0xFFFF\n\t\tthis._high = c16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT32_. The current _UINT32_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT32_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.div = function (other) {\n\t\tif ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')\n\n\t\t// other == 1\n\t\tif (other._high == 0 && other._low == 1) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\treturn this\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._low = 0\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\tthis._low = 1\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 16) {\n\t\t\t\t\tthis._high |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._low |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT32_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.negate = function () {\n\t\tvar v = ( ~this._low & 0xFFFF ) + 1\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Equals\n\t * @method eq\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n\t\treturn (this._low == other._low) && (this._high == other._high)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n\t\tif (this._high > other._high) return true\n\t\tif (this._high < other._high) return false\n\t\treturn this._low > other._low\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n\t\tif (this._high < other._high) return true\n\t\tif (this._high > other._high) return false\n\t\treturn this._low < other._low\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.or = function (other) {\n\t\tthis._low |= other._low\n\t\tthis._high |= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.and = function (other) {\n\t\tthis._low &= other._low\n\t\tthis._high &= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.not = function() {\n\t\tthis._low = ~this._low & 0xFFFF\n\t\tthis._high = ~this._high & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.xor = function (other) {\n\t\tthis._low ^= other._low\n\t\tthis._high ^= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n\t\tif (n > 16) {\n\t\t\tthis._low = this._high >> (n - 16)\n\t\t\tthis._high = 0\n\t\t} else if (n == 16) {\n\t\t\tthis._low = this._high\n\t\t\tthis._high = 0\n\t\t} else {\n\t\t\tthis._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )\n\t\t\tthis._high >>= n\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n\t\tif (n > 16) {\n\t\t\tthis._high = this._low << (n - 16)\n\t\t\tthis._low = 0\n\t\t\tif (!allowOverflow) {\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t} else if (n == 16) {\n\t\t\tthis._high = this._low\n\t\t\tthis._low = 0\n\t\t} else {\n\t\t\tthis._high = (this._high << n) | (this._low >> (16-n))\n\t\t\tthis._low = (this._low << n) & 0xFFFF\n\t\t\tif (!allowOverflow) {\n\t\t\t\t// Overflow only allowed on the high bits...\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v << n) | (v >>> (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v >>> n) | (v << (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT32_\n\t * @method clone\n\t * @return {Object} cloned UINT32\n\t */\n\tUINT32.prototype.clone = function () {\n\t\treturn new UINT32(this._low, this._high)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT32\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT32\n\t} else {\n\t\t// Browser\n\t\troot['UINT32'] = UINT32\n\t}\n\n})(this)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cuint/lib/uint32.js\n// module id = 18\n// module chunks = 0","/**\n\tC-like unsigned 64 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t16: UINT64( Math.pow(16, 5) )\n\t,\t10: UINT64( Math.pow(10, 5) )\n\t,\t2:  UINT64( Math.pow(2, 5) )\n\t}\n\tvar radixCache = {\n\t\t16: UINT64(16)\n\t,\t10: UINT64(10)\n\t,\t2:  UINT64(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 64 bits integer\n\t * @constructor\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * or\n\t * @param {String|Number} integer as a string \t\t | integer as a number\n\t * @param {Number|Undefined} radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT64 (a00, a16, a32, a48) {\n\t\tif ( !(this instanceof UINT64) )\n\t\t\treturn new UINT64(a00, a16, a32, a48)\n\n\t\tthis.remainder = null\n\t\tif (typeof a00 == 'string')\n\t\t\treturn fromString.call(this, a00, a16)\n\n\t\tif (typeof a16 == 'undefined')\n\t\t\treturn fromNumber.call(this, a00)\n\n\t\tfromBits.apply(this, arguments)\n\t}\n\n\t/**\n\t * Set the current _UINT64_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (a00, a16, a32, a48) {\n\t\tif (typeof a32 == 'undefined') {\n\t\t\tthis._a00 = a00 & 0xFFFF\n\t\t\tthis._a16 = a00 >>> 16\n\t\t\tthis._a32 = a16 & 0xFFFF\n\t\t\tthis._a48 = a16 >>> 16\n\t\t\treturn this\n\t\t}\n\n\t\tthis._a00 = a00 | 0\n\t\tthis._a16 = a16 | 0\n\t\tthis._a32 = a32 | 0\n\t\tthis._a48 = a48 | 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT64_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._a00 = value & 0xFFFF\n\t\tthis._a16 = value >>> 16\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT64_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tradix = radix || 10\n\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\t/*\n\t\t\tIn Javascript, bitwise operators only operate on the first 32 bits \n\t\t\tof a number, even though parseInt() encodes numbers with a 53 bits \n\t\t\tmantissa.\n\t\t\tTherefore UINT64(<Number>) can only work on 32 bits.\n\t\t\tThe radix maximum value is 36 (as per ECMA specs) (26 letters + 10 digits)\n\t\t\tmaximum input value is m = 32bits as 1 = 2^32 - 1\n\t\t\tSo the maximum substring length n is:\n\t\t\t36^(n+1) - 1 = 2^32 - 1\n\t\t\t36^(n+1) = 2^32\n\t\t\t(n+1)ln(36) = 32ln(2)\n\t\t\tn = 32ln(2)/ln(36) - 1\n\t\t\tn = 5.189644915687692\n\t\t\tn = 5\n\t\t */\n\t\tvar radixUint = radixPowerCache[radix] || new UINT64( Math.pow(radix, 5) )\n\n\t\tfor (var i = 0, len = s.length; i < len; i += 5) {\n\t\t\tvar size = Math.min(5, len - i)\n\t\t\tvar value = parseInt( s.slice(i, i + size), radix )\n\t\t\tthis.multiply(\n\t\t\t\t\tsize < 5\n\t\t\t\t\t\t? new UINT64( Math.pow(radix, size) )\n\t\t\t\t\t\t: radixUint\n\t\t\t\t)\n\t\t\t\t.add( new UINT64(value) )\n\t\t}\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT64_ to a number (last 32 bits are dropped)\n\t * @method toNumber\n\t * @return {Number} the converted UINT64\n\t */\n\tUINT64.prototype.toNumber = function () {\n\t\treturn (this._a16 * 65536) + this._a00\n\t}\n\n\t/**\n\t * Convert this _UINT64_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT64\n\t */\n\tUINT64.prototype.toString = function (radix) {\n\t\tradix = radix || 10\n\t\tvar radixUint = radixCache[radix] || new UINT64(radix)\n\n\t\tif ( !this.gt(radixUint) ) return this.toNumber().toString(radix)\n\n\t\tvar self = this.clone()\n\t\tvar res = new Array(64)\n\t\tfor (var i = 63; i >= 0; i--) {\n\t\t\tself.div(radixUint)\n\t\t\tres[i] = self.remainder.toNumber().toString(radix)\n\t\t\tif ( !self.gt(radixUint) ) break\n\t\t}\n\t\tres[i-1] = self.toNumber().toString(radix)\n\n\t\treturn res.join('')\n\t}\n\n\t/**\n\t * Add two _UINT64_. The current _UINT64_ stores the result\n\t * @method add\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.add = function (other) {\n\t\tvar a00 = this._a00 + other._a00\n\n\t\tvar a16 = a00 >>> 16\n\t\ta16 += this._a16 + other._a16\n\n\t\tvar a32 = a16 >>> 16\n\t\ta32 += this._a32 + other._a32\n\n\t\tvar a48 = a32 >>> 16\n\t\ta48 += this._a48 + other._a48\n\n\t\tthis._a00 = a00 & 0xFFFF\n\t\tthis._a16 = a16 & 0xFFFF\n\t\tthis._a32 = a32 & 0xFFFF\n\t\tthis._a48 = a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT64_. The current _UINT64_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.subtract = function (other) {\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT64_. The current _UINT64_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16 + a32 + a48\n\t\t\tb = b00 + b16 + b32 + b48\n\t\t\ta*b = (a00 + a16 + a32 + a48)(b00 + b16 + b32 + b48)\n\t\t\t\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32 + a16b48\n\t\t\t\t+ a32b00 + a32b16 + a32b32 + a32b48\n\t\t\t\t+ a48b00 + a48b16 + a48b32 + a48b48\n\n\t\t\ta16b48, a32b32, a48b16, a48b32 and a48b48 overflow the 64 bits\n\t\t\tso it comes down to:\n\t\t\ta*b\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32\n\t\t\t\t+ a32b00 + a32b16\n\t\t\t\t+ a48b00\n\t\t\t\t= a00b00\n\t\t\t\t+ a00b16 + a16b00\n\t\t\t\t+ a00b32 + a16b16 + a32b00\n\t\t\t\t+ a00b48 + a16b32 + a32b16 + a48b00\n\t\t */\n\t\tvar a00 = this._a00\n\t\tvar a16 = this._a16\n\t\tvar a32 = this._a32\n\t\tvar a48 = this._a48\n\t\tvar b00 = other._a00\n\t\tvar b16 = other._a16\n\t\tvar b32 = other._a32\n\t\tvar b48 = other._a48\n\n\t\tvar c00 = a00 * b00\n\n\t\tvar c16 = c00 >>> 16\n\t\tc16 += a00 * b16\n\t\tvar c32 = c16 >>> 16\n\t\tc16 &= 0xFFFF\n\t\tc16 += a16 * b00\n\n\t\tc32 += c16 >>> 16\n\t\tc32 += a00 * b32\n\t\tvar c48 = c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a16 * b16\n\t\tc48 += c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a32 * b00\n\n\t\tc48 += c32 >>> 16\n\t\tc48 += a00 * b48\n\t\tc48 &= 0xFFFF\n\t\tc48 += a16 * b32\n\t\tc48 &= 0xFFFF\n\t\tc48 += a32 * b16\n\t\tc48 &= 0xFFFF\n\t\tc48 += a48 * b00\n\n\t\tthis._a00 = c00 & 0xFFFF\n\t\tthis._a16 = c16 & 0xFFFF\n\t\tthis._a32 = c32 & 0xFFFF\n\t\tthis._a48 = c48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT64_. The current _UINT64_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT64_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.div = function (other) {\n\t\tif ( (other._a16 == 0) && (other._a32 == 0) && (other._a48 == 0) ) {\n\t\t\tif (other._a00 == 0) throw Error('division by zero')\n\n\t\t\t// other == 1: this\n\t\t\tif (other._a00 == 1) {\n\t\t\t\tthis.remainder = new UINT64(0)\n\t\t\t\treturn this\n\t\t\t}\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._a00 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT64(0)\n\t\t\tthis._a00 = 1\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 48) {\n\t\t\t\t\tthis._a48 |= 1 << (i - 48)\n\t\t\t\t} else if (i >= 32) {\n\t\t\t\t\tthis._a32 |= 1 << (i - 32)\n\t\t\t\t} else if (i >= 16) {\n\t\t\t\t\tthis._a16 |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._a00 |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT64_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.negate = function () {\n\t\tvar v = ( ~this._a00 & 0xFFFF ) + 1\n\t\tthis._a00 = v & 0xFFFF\n\t\tv = (~this._a16 & 0xFFFF) + (v >>> 16)\n\t\tthis._a16 = v & 0xFFFF\n\t\tv = (~this._a32 & 0xFFFF) + (v >>> 16)\n\t\tthis._a32 = v & 0xFFFF\n\t\tthis._a48 = (~this._a48 + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\n\t * @method eq\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.equals = UINT64.prototype.eq = function (other) {\n\t\treturn (this._a48 == other._a48) && (this._a00 == other._a00)\n\t\t\t && (this._a32 == other._a32) && (this._a16 == other._a16)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.greaterThan = UINT64.prototype.gt = function (other) {\n\t\tif (this._a48 > other._a48) return true\n\t\tif (this._a48 < other._a48) return false\n\t\tif (this._a32 > other._a32) return true\n\t\tif (this._a32 < other._a32) return false\n\t\tif (this._a16 > other._a16) return true\n\t\tif (this._a16 < other._a16) return false\n\t\treturn this._a00 > other._a00\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.lessThan = UINT64.prototype.lt = function (other) {\n\t\tif (this._a48 < other._a48) return true\n\t\tif (this._a48 > other._a48) return false\n\t\tif (this._a32 < other._a32) return true\n\t\tif (this._a32 > other._a32) return false\n\t\tif (this._a16 < other._a16) return true\n\t\tif (this._a16 > other._a16) return false\n\t\treturn this._a00 < other._a00\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.or = function (other) {\n\t\tthis._a00 |= other._a00\n\t\tthis._a16 |= other._a16\n\t\tthis._a32 |= other._a32\n\t\tthis._a48 |= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.and = function (other) {\n\t\tthis._a00 &= other._a00\n\t\tthis._a16 &= other._a16\n\t\tthis._a32 &= other._a32\n\t\tthis._a48 &= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.xor = function (other) {\n\t\tthis._a00 ^= other._a00\n\t\tthis._a16 ^= other._a16\n\t\tthis._a32 ^= other._a32\n\t\tthis._a48 ^= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.not = function() {\n\t\tthis._a00 = ~this._a00 & 0xFFFF\n\t\tthis._a16 = ~this._a16 & 0xFFFF\n\t\tthis._a32 = ~this._a32 & 0xFFFF\n\t\tthis._a48 = ~this._a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftRight = UINT64.prototype.shiftr = function (n) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a00 = this._a48 >> (n - 48)\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a00 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a00 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a48 = 0\n\t\t} else {\n\t\t\tthis._a00 = ( (this._a00 >> n) | (this._a16 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a48 = (this._a48 >> n) & 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftLeft = UINT64.prototype.shiftl = function (n, allowOverflow) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a48 = this._a00 << (n - 48)\n\t\t\tthis._a32 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a48 = (this._a16 << n) | (this._a00 >> (16-n))\n\t\t\tthis._a32 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a48 = (this._a32 << n) | (this._a16 >> (16-n))\n\t\t\tthis._a32 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a00 = 0\n\t\t} else {\n\t\t\tthis._a48 = (this._a48 << n) | (this._a32 >> (16-n))\n\t\t\tthis._a32 = ( (this._a32 << n) | (this._a16 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a00 = (this._a00 << n) & 0xFFFF\n\t\t}\n\t\tif (!allowOverflow) {\n\t\t\tthis._a48 &= 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateLeft = UINT64.prototype.rotl = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// B.C.D.A rotl(16)\n\t\t\t// C.D.A.B rotl(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high << n) | (low >>> (32 - n))\n\t\tvar _low = (low << n) | (high >>> (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateRight = UINT64.prototype.rotr = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// D.A.B.C rotr(16)\n\t\t\t// C.D.A.B rotr(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high >>> n) | (low << (32 - n))\n\t\tvar _low = (low >>> n) | (high << (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT64_\n\t * @method clone\n\t * @return {Object} cloned UINT64\n\t */\n\tUINT64.prototype.clone = function () {\n\t\treturn new UINT64(this._a00, this._a16, this._a32, this._a48)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT64\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT64\n\t} else {\n\t\t// Browser\n\t\troot['UINT64'] = UINT64\n\t}\n\n})(this)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cuint/lib/uint64.js\n// module id = 19\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}